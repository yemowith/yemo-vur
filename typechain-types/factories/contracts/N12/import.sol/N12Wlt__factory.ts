/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  N12Wlt,
  N12WltInterface,
} from "../../../../contracts/N12/import.sol/N12Wlt";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "callStatic",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "signature",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "invokeCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multiExecute",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnrship",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610afe806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80631cff79cd1161005b5780631cff79cd146100f65780632ad112841461010957806344eb64631461011c5780637b8cb8b71461012f57600080fd5b80631a8090bb146100825780631b8b921d146100ab5780631b8cf2a3146100cb575b600080fd5b610095610090366004610800565b610144565b6040516100a29190610910565b60405180910390f35b6100be6100b9366004610972565b61026e565b6040516100a291906109b6565b6000546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a2565b6100be610104366004610972565b610315565b6100be6101173660046109c9565b610328565b6100be61012a366004610972565b610457565b61014261013d366004610a54565b610506565b005b6060815183511461019c5760405162461bcd60e51b815260206004820181905260248201527f5461726765747320616e642064617461206c656e677468206d69736d6174636860448201526064015b60405180910390fd5b6000835167ffffffffffffffff8111156101b8576101b8610671565b6040519080825280602002602001820160405280156101eb57816020015b60608152602001906001900390816101d65790505b50905060005b84518110156102665761023685828151811061020f5761020f610a6f565b602002602001015185838151811061022957610229610a6f565b60200260200101516105c0565b82828151811061024857610248610a6f565b6020026020010181905250808061025e90610a85565b9150506101f1565b509392505050565b6060600080846001600160a01b03168460405161028b9190610aac565b6000604051808303816000865af19150503d80600081146102c8576040519150601f19603f3d011682016040523d82523d6000602084013e6102cd565b606091505b50915091508161030d5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606401610193565b949350505050565b606061032183836105c0565b9392505050565b60606000838360405160240161033e91906109b6565b60408051601f19818403018152908290529161035991610aac565b60405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600080866001600160a01b0316836040516103cb9190610aac565b6000604051808303816000865af19150503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b50915091508161044d5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b6044820152606401610193565b9695505050505050565b6060600080846001600160a01b0316846040516104749190610aac565b600060405180830381855afa9150503d80600081146104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b50915091508161030d5760405162461bcd60e51b815260206004820152601260248201527f5374617469632063616c6c206661696c656400000000000000000000000000006044820152606401610193565b6000546001600160a01b031633146105865760405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60448201527f6e000000000000000000000000000000000000000000000000000000000000006064820152608401610193565b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516105dd9190610aac565b6000604051808303816000865af19150503d806000811461061a576040519150601f19603f3d011682016040523d82523d6000602084013e61061f565b606091505b50915091508161030d5760405162461bcd60e51b815260206004820152601060248201527f457865637574696f6e206661696c6564000000000000000000000000000000006044820152606401610193565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106b0576106b0610671565b604052919050565b600067ffffffffffffffff8211156106d2576106d2610671565b5060051b60200190565b80356001600160a01b03811681146106f357600080fd5b919050565b600067ffffffffffffffff83111561071257610712610671565b610725601f8401601f1916602001610687565b905082815283838301111561073957600080fd5b828260208301376000602084830101529392505050565b600082601f83011261076157600080fd5b610321838335602085016106f8565b600082601f83011261078157600080fd5b81356020610796610791836106b8565b610687565b82815260059290921b840181019181810190868411156107b557600080fd5b8286015b848110156107f557803567ffffffffffffffff8111156107d95760008081fd5b6107e78986838b0101610750565b8452509183019183016107b9565b509695505050505050565b6000806040838503121561081357600080fd5b823567ffffffffffffffff8082111561082b57600080fd5b818501915085601f83011261083f57600080fd5b8135602061084f610791836106b8565b82815260059290921b8401810191818101908984111561086e57600080fd5b948201945b8386101561089357610884866106dc565b82529482019490820190610873565b965050860135925050808211156108a957600080fd5b506108b685828601610770565b9150509250929050565b60005b838110156108db5781810151838201526020016108c3565b50506000910152565b600081518084526108fc8160208601602086016108c0565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561096557603f198886030184526109538583516108e4565b94509285019290850190600101610937565b5092979650505050505050565b6000806040838503121561098557600080fd5b61098e836106dc565b9150602083013567ffffffffffffffff8111156109aa57600080fd5b6108b685828601610750565b60208152600061032160208301846108e4565b6000806000606084860312156109de57600080fd5b6109e7846106dc565b9250602084013567ffffffffffffffff80821115610a0457600080fd5b818601915086601f830112610a1857600080fd5b610a27878335602085016106f8565b93506040860135915080821115610a3d57600080fd5b50610a4a86828701610750565b9150509250925092565b600060208284031215610a6657600080fd5b610321826106dc565b634e487b7160e01b600052603260045260246000fd5b600060018201610aa557634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251610abe8184602087016108c0565b919091019291505056fea2646970667358221220129e5a79b0322614b889bcad928330262f68510e5bd81487b4872ece56ebab6f64736f6c63430008140033";

type N12WltConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: N12WltConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class N12Wlt__factory extends ContractFactory {
  constructor(...args: N12WltConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<N12Wlt> {
    return super.deploy(overrides || {}) as Promise<N12Wlt>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): N12Wlt {
    return super.attach(address) as N12Wlt;
  }
  override connect(signer: Signer): N12Wlt__factory {
    return super.connect(signer) as N12Wlt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): N12WltInterface {
    return new utils.Interface(_abi) as N12WltInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): N12Wlt {
    return new Contract(address, _abi, signerOrProvider) as N12Wlt;
  }
}
