/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SwapContract,
  SwapContractInterface,
} from "../../../../contracts/Liquier/Flashloan/SwapContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinimum",
        type: "uint256",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceLimitX96",
        type: "uint160",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161053238038061053283398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161049a6100986000396000818160660152818161016401526102d8015261049a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063416e53131461003b578063c31c9c0714610061575b600080fd5b61004e61004936600461036a565b6100a0565b6040519081526020015b60405180910390f35b6100887f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610058565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590526000906001600160a01b038816906323b872dd906064016020604051808303816000875af115801561010f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013391906103e2565b506040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820187905288169063095ea7b3906044016020604051808303816000875af11580156101bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e091906103e2565b506000604051806101000160405280896001600160a01b03168152602001886001600160a01b031681526020018562ffffff168152602001336001600160a01b0316815260200142600f610234919061040b565b8152602080820189905260408083018990526001600160a01b0380881660609485015281517f414bf38900000000000000000000000000000000000000000000000000000000815285518216600482015292850151811660248401529084015162ffffff16604483015291830151821660648201526080830151608482015260a083015160a482015260c083015160c482015260e0830151821660e48201529192507f0000000000000000000000000000000000000000000000000000000000000000169063414bf38990610104016020604051808303816000875af1158015610322573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610346919061044b565b98975050505050505050565b6001600160a01b038116811461036757600080fd5b50565b60008060008060008060c0878903121561038357600080fd5b863561038e81610352565b9550602087013561039e81610352565b94506040870135935060608701359250608087013562ffffff811681146103c457600080fd5b915060a08701356103d481610352565b809150509295509295509295565b6000602082840312156103f457600080fd5b8151801515811461040457600080fd5b9392505050565b80820180821115610445577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60006020828403121561045d57600080fd5b505191905056fea2646970667358221220a0b03fffca07b62d8701da43abc2dd3d30bdb5ce4918ac6963013183635ae86764736f6c63430008140033";

type SwapContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapContract__factory extends ContractFactory {
  constructor(...args: SwapContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapContract> {
    return super.deploy(_swapRouter, overrides || {}) as Promise<SwapContract>;
  }
  override getDeployTransaction(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapRouter, overrides || {});
  }
  override attach(address: string): SwapContract {
    return super.attach(address) as SwapContract;
  }
  override connect(signer: Signer): SwapContract__factory {
    return super.connect(signer) as SwapContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapContractInterface {
    return new utils.Interface(_abi) as SwapContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapContract {
    return new Contract(address, _abi, signerOrProvider) as SwapContract;
  }
}
