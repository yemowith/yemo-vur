/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestModule,
  TestModuleInterface,
} from "../../../../contracts/Tests/wallet/TestModule";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "SessionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "SessionStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "endSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sessionUser",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "startSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163317905561072e806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063771276121161005b57806377127612146100e95780638da5cb5b146100fe578063b61d27f614610111578063e237a3fc1461012457600080fd5b806312b226c91461008257806355b667e31461009e5780636ca0f814146100c9575b600080fd5b61008b60015481565b6040519081526020015b60405180910390f35b6000546100b1906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b6100dc6100d7366004610565565b61012c565b60405161009591906105b8565b6100fc6100f7366004610606565b610299565b005b6002546100b1906001600160a01b031681565b6100dc61011f36600461061f565b6102fd565b6100fc61045a565b6000546060906001600160a01b0316331461018e5760405162461bcd60e51b815260206004820152601060248201527f4e6f742073657373696f6e20757365720000000000000000000000000000000060448201526064015b60405180910390fd5b60015442106101df5760405162461bcd60e51b815260206004820152600f60248201527f53657373696f6e206578706972656400000000000000000000000000000000006044820152606401610185565b600080856001600160a01b031685856040516101fc929190610679565b6000604051808303816000865af19150503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b5091509150816102905760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606401610185565b95945050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1916331790556102c28142610689565b60015560405181815233907f6479f44bef3ce31847397612fb476f7f382288003bdebea81c5302f8bd819dd19060200160405180910390a250565b6002546060906001600160a01b0316331461035a5760405162461bcd60e51b815260206004820152600960248201527f4e6f74206f776e657200000000000000000000000000000000000000000000006044820152606401610185565b600080866001600160a01b0316868686604051610378929190610679565b60006040518083038185875af1925050503d80600081146103b5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ba565b606091505b50915091508161040c5760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606401610185565b85876001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f87876040516104489291906106c9565b60405180910390a39695505050505050565b6000546001600160a01b031633146104b45760405162461bcd60e51b815260206004820152601060248201527f4e6f742073657373696f6e2075736572000000000000000000000000000000006044820152606401610185565b6000805473ffffffffffffffffffffffffffffffffffffffff19168155600181905560405133917f49fa048463c11173dbc8b2ab8d09ebe6c38c168737d5a622b65b8086a01cbd0691a2565b80356001600160a01b038116811461051757600080fd5b919050565b60008083601f84011261052e57600080fd5b50813567ffffffffffffffff81111561054657600080fd5b60208301915083602082850101111561055e57600080fd5b9250929050565b60008060006040848603121561057a57600080fd5b61058384610500565b9250602084013567ffffffffffffffff81111561059f57600080fd5b6105ab8682870161051c565b9497909650939450505050565b600060208083528351808285015260005b818110156105e5578581018301518582016040015282016105c9565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561061857600080fd5b5035919050565b6000806000806060858703121561063557600080fd5b61063e85610500565b935060208501359250604085013567ffffffffffffffff81111561066157600080fd5b61066d8782880161051c565b95989497509550505050565b8183823760009101908152919050565b808201808211156106c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220e43d941f3b4fa98705a63f8edd04fe22b5d74f406984e2eed9c0d18869a8e99964736f6c63430008140033";

type TestModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestModule__factory extends ContractFactory {
  constructor(...args: TestModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestModule> {
    return super.deploy(overrides || {}) as Promise<TestModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestModule {
    return super.attach(address) as TestModule;
  }
  override connect(signer: Signer): TestModule__factory {
    return super.connect(signer) as TestModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestModuleInterface {
    return new utils.Interface(_abi) as TestModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestModule {
    return new Contract(address, _abi, signerOrProvider) as TestModule;
  }
}
