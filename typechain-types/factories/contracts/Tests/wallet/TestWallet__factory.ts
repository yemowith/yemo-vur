/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestWallet,
  TestWalletInterface,
} from "../../../../contracts/Tests/wallet/TestWallet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorised",
        type: "bool",
      },
    ],
    name: "AuthorisedModule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldModule",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newModule",
        type: "address",
      },
    ],
    name: "ModuleChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_value",
        type: "bool",
      },
    ],
    name: "authoriseModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "module",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address",
      },
    ],
    name: "setModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610857806100a56000396000f3fe60806040526004361061007f5760003560e01c8063b61d27f61161004e578063b61d27f6146102a8578063b86d5298146102d5578063d6eb1bbf146102f5578063f2fde38b14610335576100c5565b80631f17732d1461021a57806347f543bc1461023c578063715018a61461025c5780638da5cb5b14610271576100c5565b366100c557604080516020808252600090820152349133917fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f91015b60405180910390a3005b6001546001600160a01b03166101225760405162461bcd60e51b815260206004820152600e60248201527f4d6f64756c65206e6f742073657400000000000000000000000000000000000060448201526064015b60405180910390fd5b60015460405160009182916001600160a01b03909116906101469083903690610693565b600060405180830381855af49150503d8060008114610181576040519150601f19603f3d011682016040523d82523d6000602084013e610186565b606091505b5091509150816101d85760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606401610119565b60015460405134916001600160a01b0316907fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f906100bb9060009036906106a3565b34801561022657600080fd5b5061023a6102353660046106ee565b610355565b005b34801561024857600080fd5b5061023a61025736600461072a565b6103bc565b34801561026857600080fd5b5061023a610423565b34801561027d57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b3480156102b457600080fd5b506102c86102c336600461074c565b610437565b60405161029f91906107d3565b3480156102e157600080fd5b5060015461028b906001600160a01b031681565b34801561030157600080fd5b5061032561031036600461072a565b60026020526000908152604090205460ff1681565b604051901515815260200161029f565b34801561034157600080fd5b5061023a61035036600461072a565b610599565b61035d6105f0565b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527f8da3ff870ae294081392139550e167f1f31f277f22015ee22fbffdbd7758f4e1910160405180910390a25050565b6103c46105f0565b600180546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f6af262ca96275dc40852dc5ae38406689d6f49c801c16c17cb6c84f103052fc390600090a35050565b61042b6105f0565b6104356000610636565b565b3360009081526002602052604090205460609060ff166104995760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697365640000000000000000000000000000000000006044820152606401610119565b600080866001600160a01b03168686866040516104b7929190610693565b60006040518083038185875af1925050503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161054b5760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606401610119565b85876001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f87876040516105879291906106a3565b60405180910390a39695505050505050565b6105a16105f0565b6001600160a01b0381166105e4576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610119565b6105ed81610636565b50565b6000546001600160a01b03163314610435576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610119565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b80356001600160a01b03811681146106e957600080fd5b919050565b6000806040838503121561070157600080fd5b61070a836106d2565b91506020830135801515811461071f57600080fd5b809150509250929050565b60006020828403121561073c57600080fd5b610745826106d2565b9392505050565b6000806000806060858703121561076257600080fd5b61076b856106d2565b935060208501359250604085013567ffffffffffffffff8082111561078f57600080fd5b818701915087601f8301126107a357600080fd5b8135818111156107b257600080fd5b8860208285010111156107c457600080fd5b95989497505060200194505050565b600060208083528351808285015260005b81811015610800578581018301518582016040015282016107e4565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212201455221b72cba5aefd1fc75d4757f19046d3cb69c2ebb48d8ee56c66b9262de964736f6c63430008140033";

type TestWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWallet__factory extends ContractFactory {
  constructor(...args: TestWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWallet> {
    return super.deploy(overrides || {}) as Promise<TestWallet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWallet {
    return super.attach(address) as TestWallet;
  }
  override connect(signer: Signer): TestWallet__factory {
    return super.connect(signer) as TestWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWalletInterface {
    return new utils.Interface(_abi) as TestWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWallet {
    return new Contract(address, _abi, signerOrProvider) as TestWallet;
  }
}
