/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { YSwapper, YSwapperInterface } from "../../contracts/YSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fixedToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "reswap",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uniswapRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c65380380610c6583398101604081905261002f91610108565b600080546001600160a01b03199081163317909155600180546001600160a01b038516921682179055604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa158015610093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100b7919061013b565b600280546001600160a01b039283166001600160a01b031991821617909155600380549390921692169190911790555061015d565b80516001600160a01b038116811461010357600080fd5b919050565b6000806040838503121561011b57600080fd5b610124836100ec565b9150610132602084016100ec565b90509250929050565b60006020828403121561014d57600080fd5b610156826100ec565b9392505050565b610af98061016c6000396000f3fe6080604052600436106100745760003560e01c8063a39f5a0d1161004e578063a39f5a0d146100ff578063acf0ae031461011f578063ad5c46481461014c578063c4c641471461016c57600080fd5b806336118b5214610080578063735de9f7146100a25780639bc5c509146100df57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b366004610810565b61018c565b005b3480156100ae57600080fd5b506001546100c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100eb57600080fd5b506100a06100fa366004610840565b610226565b34801561010b57600080fd5b506003546100c2906001600160a01b031681565b34801561012b57600080fd5b5061013f61013a366004610882565b610358565b6040516100d691906108d4565b34801561015857600080fd5b506002546100c2906001600160a01b031681565b34801561017857600080fd5b5061013f610187366004610882565b610380565b6000546001600160a01b031633146101eb5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b6040516001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610221573d6000803e3d6000fd5b505050565b6000546001600160a01b031633146102805760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064016101e2565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af11580156102e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c9190610918565b6102215760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016101e2565b6003546060906103769087906001600160a01b031687878787610399565b9695505050505050565b600354606090610376906001600160a01b031687878787875b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018590526060906001600160a01b038816906323b872dd906064016020604051808303816000875af1158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610918565b6104785760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206f6620746f6b656e496e206661696c656400000000000060448201526064016101e2565b6001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018790529088169063095ea7b3906044016020604051808303816000875af11580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190610918565b6105545760405162461bcd60e51b815260206004820152601a60248201527f417070726f76616c206f6620746f6b656e496e206661696c656400000000000060448201526064016101e2565b6002546060906001600160a01b038981169116148061058057506002546001600160a01b038881169116145b1561061257604080516002808252606082018352909160208301908036833701905050905087816000815181106105b9576105b9610957565b60200260200101906001600160a01b031690816001600160a01b03168152505086816001815181106105ed576105ed610957565b60200260200101906001600160a01b031690816001600160a01b0316815250506106cd565b604080516003808252608082019092529060208201606080368337019050509050878160008151811061064757610647610957565b6001600160a01b03928316602091820292909201015260025482519116908290600190811061067857610678610957565b60200260200101906001600160a01b031690816001600160a01b03168152505086816002815181106106ac576106ac610957565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6001546040517f38ed17390000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906338ed17399061071e908990899086908a908a9060040161096d565b6000604051808303816000875af115801561073d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261076591908101906109de565b9150866001600160a01b0316886001600160a01b0316336001600160a01b03167f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f18986600188516107b69190610a9c565b815181106107c6576107c6610957565b60200260200101516040516107e5929190918252602082015260400190565b60405180910390a4509695505050505050565b6001600160a01b038116811461080d57600080fd5b50565b6000806040838503121561082357600080fd5b823591506020830135610835816107f8565b809150509250929050565b60008060006060848603121561085557600080fd5b8335610860816107f8565b9250602084013591506040840135610877816107f8565b809150509250925092565b600080600080600060a0868803121561089a57600080fd5b85356108a5816107f8565b9450602086013593506040860135925060608601356108c3816107f8565b949793965091946080013592915050565b6020808252825182820181905260009190848201906040850190845b8181101561090c578351835292840192918401916001016108f0565b50909695505050505050565b60006020828403121561092a57600080fd5b8151801515811461093a57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156109bd5784516001600160a01b031683529383019391830191600101610998565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156109f157600080fd5b825167ffffffffffffffff80821115610a0957600080fd5b818501915085601f830112610a1d57600080fd5b815181811115610a2f57610a2f610941565b8060051b604051601f19603f83011681018181108582111715610a5457610a54610941565b604052918252848201925083810185019188831115610a7257600080fd5b938501935b82851015610a9057845184529385019392850192610a77565b98975050505050505050565b81810381811115610abd57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220332b48817daa35f5c9d48c44bb40db060a57741f4bd28bcdc45a48b55458644b64736f6c63430008140033";

type YSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YSwapper__factory extends ContractFactory {
  constructor(...args: YSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uniswapRouter: PromiseOrValue<string>,
    _fixedToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YSwapper> {
    return super.deploy(
      _uniswapRouter,
      _fixedToken,
      overrides || {}
    ) as Promise<YSwapper>;
  }
  override getDeployTransaction(
    _uniswapRouter: PromiseOrValue<string>,
    _fixedToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _uniswapRouter,
      _fixedToken,
      overrides || {}
    );
  }
  override attach(address: string): YSwapper {
    return super.attach(address) as YSwapper;
  }
  override connect(signer: Signer): YSwapper__factory {
    return super.connect(signer) as YSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YSwapperInterface {
    return new utils.Interface(_abi) as YSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YSwapper {
    return new Contract(address, _abi, signerOrProvider) as YSwapper;
  }
}
