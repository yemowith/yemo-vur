/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  YStorage,
  YStorageInterface,
} from "../../../../../contracts/Space/YTools/YStorage.sol/YStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b0319338181169190921617179055610690806100396000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638ca3c553146100515780638da5cb5b14610066578063a6f9dae114610096578063ae55c888146100a9575b600080fd5b61006461005f3660046103ce565b6100c9565b005b600054610079906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100646100a4366004610432565b610158565b6100bc6100b7366004610462565b61027b565b60405161008d91906104c3565b6000546001600160a01b031633146101285760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b8060018360405161013991906104f6565b90815260200160405180910390209081610153919061059a565b505050565b6000546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640161011f565b6001600160a01b0381166102085760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f2061646472657373000000604482015260640161011f565b600080546040516001600160a01b03808516939216917fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c91a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060018260405161028d91906104f6565b908152602001604051809103902080546102a690610512565b80601f01602080910402602001604051908101604052809291908181526020018280546102d290610512565b801561031f5780601f106102f45761010080835404028352916020019161031f565b820191906000526020600020905b81548152906001019060200180831161030257829003601f168201915b50505050509050919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261035257600080fd5b813567ffffffffffffffff8082111561036d5761036d61032b565b604051601f8301601f19908116603f011681019082821181831017156103955761039561032b565b816040528381528660208588010111156103ae57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156103e157600080fd5b823567ffffffffffffffff808211156103f957600080fd5b61040586838701610341565b9350602085013591508082111561041b57600080fd5b5061042885828601610341565b9150509250929050565b60006020828403121561044457600080fd5b81356001600160a01b038116811461045b57600080fd5b9392505050565b60006020828403121561047457600080fd5b813567ffffffffffffffff81111561048b57600080fd5b61049784828501610341565b949350505050565b60005b838110156104ba5781810151838201526020016104a2565b50506000910152565b60208152600082518060208401526104e281604085016020870161049f565b601f01601f19169190910160400192915050565b6000825161050881846020870161049f565b9190910192915050565b600181811c9082168061052657607f821691505b60208210810361054657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561015357600081815260208120601f850160051c810160208610156105735750805b601f850160051c820191505b818110156105925782815560010161057f565b505050505050565b815167ffffffffffffffff8111156105b4576105b461032b565b6105c8816105c28454610512565b8461054c565b602080601f8311600181146105fd57600084156105e55750858301515b600019600386901b1c1916600185901b178555610592565b600085815260208120601f198616915b8281101561062c5788860151825594840194600190910190840161060d565b508582101561064a5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122071d88aa9e2fba21c16c15c3c0491ed06608714acfd022bde8aa70c4a89a5b4ac64736f6c63430008140033";

type YStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YStorage__factory extends ContractFactory {
  constructor(...args: YStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YStorage> {
    return super.deploy(overrides || {}) as Promise<YStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YStorage {
    return super.attach(address) as YStorage;
  }
  override connect(signer: Signer): YStorage__factory {
    return super.connect(signer) as YStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YStorageInterface {
    return new utils.Interface(_abi) as YStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YStorage {
    return new Contract(address, _abi, signerOrProvider) as YStorage;
  }
}
