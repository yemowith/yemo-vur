/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  YEncoder,
  YEncoderInterface,
} from "../../../../../contracts/Space/YTools/YEncoder.sol/YEncoder";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "additionalParam",
        type: "bytes32",
      },
    ],
    name: "decode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "additionalParam",
        type: "bytes32",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "originalData",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "additionalParam",
        type: "bytes32",
      },
    ],
    name: "validateEncodedData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610808806100326000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a6f9dae111610050578063a6f9dae1146100bf578063ac25e0b1146100d4578063c439373c146100f457600080fd5b80638da5cb5b1461006c5780639ef9dfff1461009c575b600080fd5b60005461007f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100af6100aa3660046105f9565b610107565b6040519015158152602001610093565b6100d26100cd366004610666565b61011e565b005b6100e76100e236600461068f565b610246565b60405161009391906106f8565b6100e761010236600461068f565b61025b565b6000610114848484610267565b90505b9392505050565b6000546001600160a01b0316331461017d5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166101d35760405162461bcd60e51b815260206004820152601d60248201527f4e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610174565b600080546040516001600160a01b03808516939216917fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c91a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606061025283836102d0565b90505b92915050565b60606102528383610351565b6000806102748584610351565b90508380519060200120818051906020012014610295576000915050610117565b600081846040516020016102aa92919061072b565b60408051808303601f190181529190528051602090910120600154149695505050505050565b606060008351116103235760405162461bcd60e51b815260206004820152601460248201527f446174612063616e6e6f7420626520656d7074790000000000000000000000006044820152606401610174565b600154828460405160200161033a9392919061074d565b604051602081830303815290604052905092915050565b606060208351116103f05760405162461bcd60e51b815260206004820152604360248201527f456e636f646564206461746120697320746f6f2073686f727420746f20636f6e60448201527f7461696e2073616c7420616e64206164646974696f6e616c20706172616d657460648201527f6572730000000000000000000000000000000000000000000000000000000000608482015260a401610174565b602083810151600154604080519384018390528301859052909160600160405160208183030381529060405280519060200120146104705760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420656e636f64696e6720706172616d657465727300000000006044820152606401610174565b6000602085516104809190610790565b67ffffffffffffffff81111561049857610498610556565b6040519080825280601f01601f1916602001820160405280156104c2576020820181803683370190505b50905060205b855181101561054d578581815181106104e3576104e36107a3565b602001015160f81c60f81b826020836104fc9190610790565b8151811061050c5761050c6107a3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080610545816107b9565b9150506104c8565b50949350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261057d57600080fd5b813567ffffffffffffffff8082111561059857610598610556565b604051601f8301601f19908116603f011681019082821181831017156105c0576105c0610556565b816040528381528660208588010111156105d957600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561060e57600080fd5b833567ffffffffffffffff8082111561062657600080fd5b6106328783880161056c565b9450602086013591508082111561064857600080fd5b506106558682870161056c565b925050604084013590509250925092565b60006020828403121561067857600080fd5b81356001600160a01b038116811461011757600080fd5b600080604083850312156106a257600080fd5b823567ffffffffffffffff8111156106b957600080fd5b6106c58582860161056c565b95602094909401359450505050565b60005b838110156106ef5781810151838201526020016106d7565b50506000910152565b60208152600082518060208401526107178160408501602087016106d4565b601f01601f19169190910160400192915050565b6000835161073d8184602088016106d4565b9190910191825250602001919050565b8381528260208201526000825161076b8160408501602087016106d4565b91909101604001949350505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102555761025561077a565b634e487b7160e01b600052603260045260246000fd5b6000600182016107cb576107cb61077a565b506001019056fea2646970667358221220c4dd545cde8a482a1aa70384e510a06f769a2157da642aa50ec83bd6b59a86d864736f6c63430008140033";

type YEncoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YEncoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YEncoder__factory extends ContractFactory {
  constructor(...args: YEncoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YEncoder> {
    return super.deploy(overrides || {}) as Promise<YEncoder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YEncoder {
    return super.attach(address) as YEncoder;
  }
  override connect(signer: Signer): YEncoder__factory {
    return super.connect(signer) as YEncoder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YEncoderInterface {
    return new utils.Interface(_abi) as YEncoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YEncoder {
    return new Contract(address, _abi, signerOrProvider) as YEncoder;
  }
}
