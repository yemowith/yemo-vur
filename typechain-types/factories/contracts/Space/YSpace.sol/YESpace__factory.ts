/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  YESpace,
  YESpaceInterface,
} from "../../../../contracts/Space/YSpace.sol/YESpace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "storedAddress",
        type: "address",
      },
    ],
    name: "AddressStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "deployedContract",
        type: "address",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newSalt",
        type: "bytes32",
      },
    ],
    name: "changeSalt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
    ],
    name: "decode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610be8806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c80639b2ea4bd11610081578063e5c5e9a31161005b578063e5c5e9a314610184578063f2fde38b14610197578063fec95c3f146101aa57600080fd5b80639b2ea4bd1461014b578063ae55c8881461015e578063bf40fac11461017157600080fd5b80636c67bdfa116100b25780636c67bdfa1461011d578063715018a6146101325780638da5cb5b1461013a57600080fd5b8062774360146100cd57806312496a1b146100fd575b600080fd5b6100e06100db3660046107fb565b6101bd565b6040516001600160a01b0390911681526020015b60405180910390f35b61011061010b3660046107fb565b6101d8565b6040516100f49190610888565b61013061012b3660046108a2565b6101e3565b005b61013061021b565b6000546001600160a01b03166100e0565b61013061015936600461091d565b61022f565b61011061016c3660046107fb565b6102c0565b6100e061017f3660046107fb565b610370565b6101106101923660046107fb565b6103a1565b6101306101a536600461096b565b6103ac565b6101306101b8366004610986565b610408565b60006101c7610415565b6101d08261045b565b90505b919050565b60606101d0826104ef565b6101eb610415565b806001836040516101fc919061099f565b908152602001604051809103902090816102169190610a43565b505050565b610223610415565b61022d600061056d565b565b610237610415565b80600283604051610248919061099f565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff19909316929092179091557f94227a1a2ee425ebef2dcee20f5004e2624476e0c67b57161bbbb77c5df1de45906102b49084908490610b03565b60405180910390a15050565b60606001826040516102d2919061099f565b908152602001604051809103902080546102eb906109bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610317906109bb565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b50505050509050919050565b6000600282604051610382919061099f565b908152604051908190036020019020546001600160a01b031692915050565b60606101d0826105ca565b6103b4610415565b6001600160a01b0381166103fc576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6104058161056d565b50565b610410610415565b600355565b6000546001600160a01b0316331461022d576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016103f3565b60008060006003544260405160200161047e929190918252602082015260400190565b6040516020818303038152906040528051906020012090508084516020860134f59150813b6104ac57600080fd5b6040516001600160a01b03831681527f8ffcdc15a283d706d38281f500270d8b5a656918f555de0913d7455e3e6bc1bf9060200160405180910390a15092915050565b606060008251116105425760405162461bcd60e51b815260206004820152601460248201527f446174612063616e6e6f7420626520656d70747900000000000000000000000060448201526064016103f3565b60035482604051602001610557929190610b2e565b6040516020818303038152906040529050919050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060602082511161061d5760405162461bcd60e51b815260206004820152601960248201527f456e636f646564206461746120697320746f6f2073686f72740000000000000060448201526064016103f3565b602082015160035481146106735760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420656e636f64696e6720706172616d6574657273000000000060448201526064016103f3565b6000602084516106839190610b6a565b67ffffffffffffffff81111561069b5761069b610758565b6040519080825280601f01601f1916602001820160405280156106c5576020820181803683370190505b50905060205b8451811015610750578481815181106106e6576106e6610b83565b602001015160f81c60f81b826020836106ff9190610b6a565b8151811061070f5761070f610b83565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061074881610b99565b9150506106cb565b509392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261077f57600080fd5b813567ffffffffffffffff8082111561079a5761079a610758565b604051601f8301601f19908116603f011681019082821181831017156107c2576107c2610758565b816040528381528660208588010111156107db57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561080d57600080fd5b813567ffffffffffffffff81111561082457600080fd5b6108308482850161076e565b949350505050565b60005b8381101561085357818101518382015260200161083b565b50506000910152565b60008151808452610874816020860160208601610838565b601f01601f19169290920160200192915050565b60208152600061089b602083018461085c565b9392505050565b600080604083850312156108b557600080fd5b823567ffffffffffffffff808211156108cd57600080fd5b6108d98683870161076e565b935060208501359150808211156108ef57600080fd5b506108fc8582860161076e565b9150509250929050565b80356001600160a01b03811681146101d357600080fd5b6000806040838503121561093057600080fd5b823567ffffffffffffffff81111561094757600080fd5b6109538582860161076e565b92505061096260208401610906565b90509250929050565b60006020828403121561097d57600080fd5b61089b82610906565b60006020828403121561099857600080fd5b5035919050565b600082516109b1818460208701610838565b9190910192915050565b600181811c908216806109cf57607f821691505b6020821081036109ef57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561021657600081815260208120601f850160051c81016020861015610a1c5750805b601f850160051c820191505b81811015610a3b57828155600101610a28565b505050505050565b815167ffffffffffffffff811115610a5d57610a5d610758565b610a7181610a6b84546109bb565b846109f5565b602080601f831160018114610aa65760008415610a8e5750858301515b600019600386901b1c1916600185901b178555610a3b565b600085815260208120601f198616915b82811015610ad557888601518255948401946001909101908401610ab6565b5085821015610af35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000610b16604083018561085c565b90506001600160a01b03831660208301529392505050565b82815260008251610b46816020850160208701610838565b919091016020019392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b7d57610b7d610b54565b92915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610bab57610bab610b54565b506001019056fea2646970667358221220af00db90ae2fd5d2b45b7123bf341d7b3723b211aa5225f550365e1031a165c864736f6c63430008140033";

type YESpaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YESpaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YESpace__factory extends ContractFactory {
  constructor(...args: YESpaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YESpace> {
    return super.deploy(overrides || {}) as Promise<YESpace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YESpace {
    return super.attach(address) as YESpace;
  }
  override connect(signer: Signer): YESpace__factory {
    return super.connect(signer) as YESpace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YESpaceInterface {
    return new utils.Interface(_abi) as YESpaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YESpace {
    return new Contract(address, _abi, signerOrProvider) as YESpace;
  }
}
