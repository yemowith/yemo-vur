/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YESpace,
  YESpaceInterface,
} from "../../../contracts/Space/YESpace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "storedAddress",
        type: "address",
      },
    ],
    name: "AddressStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "deployedContract",
        type: "address",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct YESpace.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct YESpace.Call3[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate3",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct YESpace.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newSalt",
        type: "bytes32",
      },
    ],
    name: "changeSalt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
    ],
    name: "decode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "customSalt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "constructorParams",
        type: "bytes",
      },
    ],
    name: "deployWithSalt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "encode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeStatic",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSalt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multiExecute",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610083565b50604080514260208201526001600160601b03193360601b169181019190915260540160408051601f1981840301815291905280516020909101206003556100d3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611941806100e26000396000f3fe6080604052600436106101285760003560e01c806382ad56cb116100a5578063bf40fac111610074578063e8bf2d5f11610059578063e8bf2d5f14610345578063f2fde38b14610365578063fec95c3f1461038557600080fd5b8063bf40fac114610305578063e5c5e9a31461032557600080fd5b806382ad56cb146102875780638da5cb5b146102a75780639b2ea4bd146102c5578063ae55c888146102e557600080fd5b80631cff79cd116100fc578063252dba42116100e1578063252dba42146102225780636c67bdfa14610250578063715018a61461027257600080fd5b80631cff79cd146101e25780632431f3311461020257600080fd5b80627743601461012d57806312496a1b1461016a57806313a9589c146101975780631a8090bb146101b5575b600080fd5b34801561013957600080fd5b5061014d610148366004611111565b6103a5565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017657600080fd5b5061018a610185366004611111565b6103c0565b6040516101619190611196565b3480156101a357600080fd5b50600354604051908152602001610161565b3480156101c157600080fd5b506101d56101d036600461127b565b6103cb565b6040516101619190611393565b3480156101ee57600080fd5b5061018a6101fd3660046113a6565b6105a7565b34801561020e57600080fd5b5061014d61021d3660046113ea565b610668565b34801561022e57600080fd5b5061024261023d3660046114a3565b61067d565b6040516101619291906114e5565b34801561025c57600080fd5b5061027061026b3660046114fe565b6107f0565b005b34801561027e57600080fd5b50610270610828565b61029a6102953660046114a3565b61083c565b6040516101619190611558565b3480156102b357600080fd5b506000546001600160a01b031661014d565b3480156102d157600080fd5b506102706102e03660046115ce565b6109d5565b3480156102f157600080fd5b5061018a610300366004611111565b610a66565b34801561031157600080fd5b5061014d610320366004611111565b610b16565b34801561033157600080fd5b5061018a610340366004611111565b610b47565b34801561035157600080fd5b5061018a6103603660046113a6565b610b52565b34801561037157600080fd5b5061027061038036600461161c565b610c09565b34801561039157600080fd5b506102706103a0366004611637565b610c60565b60006103af610c6d565b6103b882610cb3565b90505b919050565b60606103b882610d47565b60606103d5610c6d565b815183511461042b5760405162461bcd60e51b815260206004820181905260248201527f5461726765747320616e642064617461206c656e677468206d69736d6174636860448201526064015b60405180910390fd5b6000835167ffffffffffffffff8111156104475761044761105a565b60405190808252806020026020018201604052801561047a57816020015b60608152602001906001900390816104655790505b50905060005b845181101561059d5760008086838151811061049e5761049e611650565b60200260200101516001600160a01b03168684815181106104c1576104c1611650565b60200260200101516040516104d69190611666565b6000604051808303816000865af19150503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b50915091508161056a5760405162461bcd60e51b815260206004820152601060248201527f457865637574696f6e206661696c6564000000000000000000000000000000006044820152606401610422565b8084848151811061057d5761057d611650565b60200260200101819052505050808061059590611698565b915050610480565b5090505b92915050565b60606105b1610c6d565b600080846001600160a01b0316846040516105cc9190611666565b6000604051808303816000865af19150503d8060008114610609576040519150601f19603f3d011682016040523d82523d6000602084013e61060e565b606091505b5091509150816106605760405162461bcd60e51b815260206004820152601060248201527f457865637574696f6e206661696c6564000000000000000000000000000000006044820152606401610422565b949350505050565b6000610672610c6d565b610660848484610dc4565b60006060610689610c6d565b4391508267ffffffffffffffff8111156106a5576106a561105a565b6040519080825280602002602001820160405280156106d857816020015b60608152602001906001900390816106c35790505b50905060005b838110156107e8576000808686848181106106fb576106fb611650565b905060200281019061070d91906116b1565b61071b90602081019061161c565b6001600160a01b031687878581811061073657610736611650565b905060200281019061074891906116b1565b6107569060208101906116c7565b60405161076492919061170e565b6000604051808303816000865af19150503d80600081146107a1576040519150601f19603f3d011682016040523d82523d6000602084013e6107a6565b606091505b5091509150816107b557600080fd5b808484815181106107c8576107c8611650565b6020026020010181905250505080806107e090611698565b9150506106de565b509250929050565b6107f8610c6d565b806001836040516108099190611666565b9081526020016040518091039020908161082391906117a6565b505050565b610830610c6d565b61083a6000610e77565b565b6060610846610c6d565b818067ffffffffffffffff8111156108605761086061105a565b6040519080825280602002602001820160405280156108a657816020015b60408051808201909152600081526060602082015281526020019060019003908161087e5790505b5091503660005b828110156109cc5760008482815181106108c9576108c9611650565b602002602001015190508686838181106108e5576108e5611650565b90506020028101906108f79190611866565b9250610906602084018461161c565b6001600160a01b031661091c60408501856116c7565b60405161092a92919061170e565b6000604051808303816000865af19150503d8060008114610967576040519150601f19603f3d011682016040523d82523d6000602084013e61096c565b606091505b5060208084019190915290151580835290840135176109c35762461bcd60e51b600052602060045260176024527f4d756c746963616c6c333a2063616c6c206661696c656400000000000000000060445260646000fd5b506001016108ad565b50505092915050565b6109dd610c6d565b806002836040516109ee9190611666565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff19909316929092179091557f94227a1a2ee425ebef2dcee20f5004e2624476e0c67b57161bbbb77c5df1de4590610a5a908490849061187c565b60405180910390a15050565b6060600182604051610a789190611666565b90815260200160405180910390208054610a919061171e565b80601f0160208091040260200160405190810160405280929190818152602001828054610abd9061171e565b8015610b0a5780601f10610adf57610100808354040283529160200191610b0a565b820191906000526020600020905b815481529060010190602001808311610aed57829003601f168201915b50505050509050919050565b6000600282604051610b289190611666565b908152604051908190036020019020546001600160a01b031692915050565b60606103b882610ed4565b6060610b5c610c6d565b600080846001600160a01b031684604051610b779190611666565b600060405180830381855afa9150503d8060008114610bb2576040519150601f19603f3d011682016040523d82523d6000602084013e610bb7565b606091505b5091509150816106605760405162461bcd60e51b815260206004820152601260248201527f5374617469632063616c6c206661696c656400000000000000000000000000006044820152606401610422565b610c11610c6d565b6001600160a01b038116610c54576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610422565b610c5d81610e77565b50565b610c68610c6d565b600355565b6000546001600160a01b0316331461083a576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610422565b600080600060035442604051602001610cd6929190918252602082015260400190565b6040516020818303038152906040528051906020012090508084516020860134f59150813b610d0457600080fd5b6040516001600160a01b03831681527f8ffcdc15a283d706d38281f500270d8b5a656918f555de0913d7455e3e6bc1bf9060200160405180910390a15092915050565b60606000825111610d9a5760405162461bcd60e51b815260206004820152601460248201527f446174612063616e6e6f7420626520656d7074790000000000000000000000006044820152606401610422565b600354604051610dae9184916020016118a7565b6040516020818303038152906040529050919050565b60008060008584604051602001610ddc9291906118c9565b60408051601f19818403018152828252600354602084015290820187905291506000906060016040516020818303038152906040528051906020012090508082516020840134f59250823b610e3057600080fd5b6040516001600160a01b03841681527f8ffcdc15a283d706d38281f500270d8b5a656918f555de0913d7455e3e6bc1bf9060200160405180910390a1509095945050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60606020825111610f275760405162461bcd60e51b815260206004820152601960248201527f456e636f646564206461746120697320746f6f2073686f7274000000000000006044820152606401610422565b81518201601e1901516003548114610f815760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420656e636f64696e6720706172616d657465727300000000006044820152606401610422565b600060208451610f9191906118f8565b67ffffffffffffffff811115610fa957610fa961105a565b6040519080825280601f01601f191660200182016040528015610fd3576020820181803683370190505b50905060005b815181101561105257848181518110610ff457610ff4611650565b602001015160f81c60f81b82828151811061101157611011611650565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508061104a81611698565b915050610fd9565b509392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110995761109961105a565b604052919050565b600082601f8301126110b257600080fd5b813567ffffffffffffffff8111156110cc576110cc61105a565b6110df601f8201601f1916602001611070565b8181528460208386010111156110f457600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561112357600080fd5b813567ffffffffffffffff81111561113a57600080fd5b610660848285016110a1565b60005b83811015611161578181015183820152602001611149565b50506000910152565b60008151808452611182816020860160208601611146565b601f01601f19169290920160200192915050565b6020815260006111a9602083018461116a565b9392505050565b600067ffffffffffffffff8211156111ca576111ca61105a565b5060051b60200190565b80356001600160a01b03811681146103bb57600080fd5b600082601f8301126111fc57600080fd5b8135602061121161120c836111b0565b611070565b82815260059290921b8401810191818101908684111561123057600080fd5b8286015b8481101561127057803567ffffffffffffffff8111156112545760008081fd5b6112628986838b01016110a1565b845250918301918301611234565b509695505050505050565b6000806040838503121561128e57600080fd5b823567ffffffffffffffff808211156112a657600080fd5b818501915085601f8301126112ba57600080fd5b813560206112ca61120c836111b0565b82815260059290921b840181019181810190898411156112e957600080fd5b948201945b8386101561130e576112ff866111d4565b825294820194908201906112ee565b9650508601359250508082111561132457600080fd5b50611331858286016111eb565b9150509250929050565b600082825180855260208086019550808260051b84010181860160005b8481101561138657601f1986840301895261137483835161116a565b98840198925090830190600101611358565b5090979650505050505050565b6020815260006111a9602083018461133b565b600080604083850312156113b957600080fd5b6113c2836111d4565b9150602083013567ffffffffffffffff8111156113de57600080fd5b611331858286016110a1565b6000806000606084860312156113ff57600080fd5b833567ffffffffffffffff8082111561141757600080fd5b611423878388016110a1565b945060208601359350604086013591508082111561144057600080fd5b5061144d868287016110a1565b9150509250925092565b60008083601f84011261146957600080fd5b50813567ffffffffffffffff81111561148157600080fd5b6020830191508360208260051b850101111561149c57600080fd5b9250929050565b600080602083850312156114b657600080fd5b823567ffffffffffffffff8111156114cd57600080fd5b6114d985828601611457565b90969095509350505050565b828152604060208201526000610660604083018461133b565b6000806040838503121561151157600080fd5b823567ffffffffffffffff8082111561152957600080fd5b611535868387016110a1565b9350602085013591508082111561154b57600080fd5b50611331858286016110a1565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156115c057888303603f1901855281518051151584528701518784018790526115ad8785018261116a565b958801959350509086019060010161157f565b509098975050505050505050565b600080604083850312156115e157600080fd5b823567ffffffffffffffff8111156115f857600080fd5b611604858286016110a1565b925050611613602084016111d4565b90509250929050565b60006020828403121561162e57600080fd5b6111a9826111d4565b60006020828403121561164957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60008251611678818460208701611146565b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b6000600182016116aa576116aa611682565b5060010190565b60008235603e1983360301811261167857600080fd5b6000808335601e198436030181126116de57600080fd5b83018035915067ffffffffffffffff8211156116f957600080fd5b60200191503681900382131561149c57600080fd5b8183823760009101908152919050565b600181811c9082168061173257607f821691505b60208210810361175257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561082357600081815260208120601f850160051c8101602086101561177f5750805b601f850160051c820191505b8181101561179e5782815560010161178b565b505050505050565b815167ffffffffffffffff8111156117c0576117c061105a565b6117d4816117ce845461171e565b84611758565b602080601f83116001811461180957600084156117f15750858301515b600019600386901b1c1916600185901b17855561179e565b600085815260208120601f198616915b8281101561183857888601518255948401946001909101908401611819565b50858210156118565787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008235605e1983360301811261167857600080fd5b60408152600061188f604083018561116a565b90506001600160a01b03831660208301529392505050565b600083516118b9818460208801611146565b9190910191825250602001919050565b600083516118db818460208801611146565b8351908301906118ef818360208801611146565b01949350505050565b818103818111156105a1576105a161168256fea2646970667358221220f9b21ee81d7178674310ac76e0c07e9d02e9eb663694ab397cdb7d286721e11964736f6c63430008140033";

type YESpaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YESpaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YESpace__factory extends ContractFactory {
  constructor(...args: YESpaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YESpace> {
    return super.deploy(overrides || {}) as Promise<YESpace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YESpace {
    return super.attach(address) as YESpace;
  }
  override connect(signer: Signer): YESpace__factory {
    return super.connect(signer) as YESpace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YESpaceInterface {
    return new utils.Interface(_abi) as YESpaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YESpace {
    return new Contract(address, _abi, signerOrProvider) as YESpace;
  }
}
