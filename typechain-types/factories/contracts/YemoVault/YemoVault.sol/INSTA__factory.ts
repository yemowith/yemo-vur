/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  INSTA,
  INSTAInterface,
} from "../../../../contracts/YemoVault/YemoVault.sol/INSTA";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_AppFcA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AppFc",
    outputs: [
      {
        internalType: "contract IInstaIndex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AppFcA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "accnrAdrs",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "accountVersion",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "cast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAccountCode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_code",
        type: "string",
      },
    ],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accnrAdrs",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "accountVersion",
            type: "uint256",
          },
        ],
        internalType: "struct INSTA.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAccount",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accnrAdrs",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "accountVersion",
            type: "uint256",
          },
        ],
        internalType: "struct INSTA.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_code",
        type: "string",
      },
    ],
    name: "mkaccnt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accnrAdrs",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "accountVersion",
            type: "uint256",
          },
        ],
        internalType: "struct INSTA.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_accountVersion",
        type: "uint256",
      },
    ],
    name: "nacct",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "accnrAdrs",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "code",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "accountVersion",
            type: "uint256",
          },
        ],
        internalType: "struct INSTA.Account",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_accnt",
        type: "string",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transTAccnt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405260016080908152604160f81b60a0526002906200002290826200012a565b503480156200003057600080fd5b506040516200155f3803806200155f833981016040819052620000539162000213565b600080546001600160a01b039384166001600160a01b031991821617909155600380549290931691161790556200024b565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000b057607f821691505b602082108103620000d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012557600081815260208120601f850160051c81016020861015620001005750805b601f850160051c820191505b8181101562000121578281556001016200010c565b5050505b505050565b81516001600160401b0381111562000146576200014662000085565b6200015e816200015784546200009b565b84620000d7565b602080601f8311600181146200019657600084156200017d5750858301515b600019600386901b1c1916600185901b17855562000121565b600085815260208120601f198616915b82811015620001c757888601518255948401946001909101908401620001a6565b5085821015620001e65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80516001600160a01b03811681146200020e57600080fd5b919050565b600080604083850312156200022757600080fd5b6200023283620001f6565b91506200024260208401620001f6565b90509250929050565b611304806200025b6000396000f3fe6080604052600436106100d65760003560e01c80634518f6b31161007f57806369328dec1161005957806369328dec1461023e578063b9742c941461025e578063db613e811461027e578063fddd0e721461029357600080fd5b80634518f6b3146101e057806347e7ef2414610200578063614c2dc61461022057600080fd5b806332b93a86116100b057806332b93a8614610171578063437b7def14610191578063441ea00c146101be57600080fd5b80630c94ee1c146100e257806324207c571461011f578063303904141461014157600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b50600154610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b5061013f61013a366004610e27565b6102b3565b005b34801561014d57600080fd5b5061016161015c366004610e81565b61045c565b6040516101169493929190610f0e565b34801561017d57600080fd5b50600354610102906001600160a01b031681565b34801561019d57600080fd5b506101b16101ac366004610e81565b610526565b6040516101169190610f4b565b3480156101ca57600080fd5b506101d3610581565b6040516101169190610f9e565b3480156101ec57600080fd5b506101b16101fb366004610e81565b61060f565b34801561020c57600080fd5b5061013f61021b366004610fb8565b610737565b34801561022c57600080fd5b5061013f61023b366004610fe4565b50565b34801561024a57600080fd5b5061013f610259366004611001565b610876565b34801561026a57600080fd5b50600054610102906001600160a01b031681565b34801561028a57600080fd5b506101b16109c6565b34801561029f57600080fd5b506101b16102ae366004611043565b610aed565b60006004846040516102c5919061109c565b90815260405190819003602001812054636eb1769f60e11b82523060048301526001600160a01b0390811660248301819052925083919085169063dd62ed3e90604401602060405180830381865afa158015610325573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034991906110b8565b10156103dd576040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905284169063095ea7b3906044016020604051808303816000875af11580156103b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103db91906110d1565b505b6040516323b872dd60e01b815230600482018190526024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af1158015610431573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045591906110d1565b5050505050565b8051808201602090810180516004825292820191909301209152805460018201546002830180546001600160a01b0393841694929093169261049d906110f3565b80601f01602080910402602001604051908101604052809291908181526020018280546104c9906110f3565b80156105165780601f106104eb57610100808354040283529160200191610516565b820191906000526020600020905b8154815290600101906020018083116104f957829003601f168201915b5050505050908060030154905084565b610563604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081525090565b60035461057b906001600160a01b0316836002610aed565b92915050565b6002805461058e906110f3565b80601f01602080910402602001604051908101604052809291908181526020018280546105ba906110f3565b80156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b505050505081565b61064c604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081525090565b60048260405161065c919061109c565b90815260408051918290036020908101832060808401835280546001600160a01b0390811685526001820154169184019190915260028101805491928401916106a4906110f3565b80601f01602080910402602001604051908101604052809291908181526020018280546106d0906110f3565b801561071d5780601f106106f25761010080835404028352916020019161071d565b820191906000526020600020905b81548152906001019060200180831161070057829003601f168201915b505050505081526020016003820154815250509050919050565b604051636eb1769f60e11b815233600482015230602482015281906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610783573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a791906110b8565b10156107fa5760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f75676800000000000000000000000060448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af115801561084d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087191906110d1565b505050565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa1580156108c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e691906110b8565b10156109345760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f75676800000000000000000000000060448201526064016107f1565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af115801561099c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c091906110d1565b50505050565b610a03604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081525090565b60046002604051610a14919061112d565b90815260408051918290036020908101832060808401835280546001600160a01b039081168552600182015416918401919091526002810180549192840191610a5c906110f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a88906110f3565b8015610ad55780601f10610aaa57610100808354040283529160200191610ad5565b820191906000526020600020905b815481529060010190602001808311610ab857829003601f168201915b50505050508152602001600382015481525050905090565b610b2a604051806080016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081525090565b6001546040517fbb7e70ef0000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820185905260006044830181905292169063bb7e70ef906064016020604051808303816000875af1158015610b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc291906111a3565b90506040518060800160405280826001600160a01b03168152602001866001600160a01b0316815260200185815260200184815250600485604051610c07919061109c565b9081526040805160209281900383019020835181547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b03928316178355938501516001830180549095169116179092558201516002820190610c73908261120e565b5060608201518160030155905050600484604051610c91919061109c565b90815260408051918290036020908101832060808401835280546001600160a01b039081168552600182015416918401919091526002810180549192840191610cd9906110f3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d05906110f3565b8015610d525780601f10610d2757610100808354040283529160200191610d52565b820191906000526020600020905b815481529060010190602001808311610d3557829003601f168201915b505050505081526020016003820154815250509150509392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d9657600080fd5b813567ffffffffffffffff80821115610db157610db1610d6f565b604051601f8301601f19908116603f01168101908282118183101715610dd957610dd9610d6f565b81604052838152866020858801011115610df257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811461023b57600080fd5b600080600060608486031215610e3c57600080fd5b833567ffffffffffffffff811115610e5357600080fd5b610e5f86828701610d85565b9350506020840135610e7081610e12565b929592945050506040919091013590565b600060208284031215610e9357600080fd5b813567ffffffffffffffff811115610eaa57600080fd5b610eb684828501610d85565b949350505050565b60005b83811015610ed9578181015183820152602001610ec1565b50506000910152565b60008151808452610efa816020860160208601610ebe565b601f01601f19169290920160200192915050565b60006001600160a01b03808716835280861660208401525060806040830152610f3a6080830185610ee2565b905082606083015295945050505050565b6020815260006001600160a01b0380845116602084015280602085015116604084015250604083015160806060840152610f8860a0840182610ee2565b9050606084015160808401528091505092915050565b602081526000610fb16020830184610ee2565b9392505050565b60008060408385031215610fcb57600080fd5b8235610fd681610e12565b946020939093013593505050565b600060208284031215610ff657600080fd5b8135610fb181610e12565b60008060006060848603121561101657600080fd5b833561102181610e12565b925060208401359150604084013561103881610e12565b809150509250925092565b60008060006060848603121561105857600080fd5b833561106381610e12565b9250602084013567ffffffffffffffff81111561107f57600080fd5b61108b86828701610d85565b925050604084013590509250925092565b600082516110ae818460208701610ebe565b9190910192915050565b6000602082840312156110ca57600080fd5b5051919050565b6000602082840312156110e357600080fd5b81518015158114610fb157600080fd5b600181811c9082168061110757607f821691505b60208210810361112757634e487b7160e01b600052602260045260246000fd5b50919050565b600080835461113b816110f3565b60018281168015611153576001811461116857611197565b60ff1984168752821515830287019450611197565b8760005260208060002060005b8581101561118e5781548a820152908401908201611175565b50505082870194505b50929695505050505050565b6000602082840312156111b557600080fd5b8151610fb181610e12565b601f82111561087157600081815260208120601f850160051c810160208610156111e75750805b601f850160051c820191505b81811015611206578281556001016111f3565b505050505050565b815167ffffffffffffffff81111561122857611228610d6f565b61123c8161123684546110f3565b846111c0565b602080601f83116001811461127157600084156112595750858301515b600019600386901b1c1916600185901b178555611206565b600085815260208120601f198616915b828110156112a057888601518255948401946001909101908401611281565b50858210156112be5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122034077785600f0aa8525293866f89a0efc75d0d5c8892d263c9585a27c3bda57664736f6c63430008140033";

type INSTAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INSTAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INSTA__factory extends ContractFactory {
  constructor(...args: INSTAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _AppFcA: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<INSTA> {
    return super.deploy(_AppFcA, _owner, overrides || {}) as Promise<INSTA>;
  }
  override getDeployTransaction(
    _AppFcA: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_AppFcA, _owner, overrides || {});
  }
  override attach(address: string): INSTA {
    return super.attach(address) as INSTA;
  }
  override connect(signer: Signer): INSTA__factory {
    return super.connect(signer) as INSTA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INSTAInterface {
    return new utils.Interface(_abi) as INSTAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): INSTA {
    return new Contract(address, _abi, signerOrProvider) as INSTA;
  }
}
