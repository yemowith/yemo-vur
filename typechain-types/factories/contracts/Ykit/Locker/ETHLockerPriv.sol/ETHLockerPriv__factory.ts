/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ETHLockerPriv,
  ETHLockerPrivInterface,
} from "../../../../../contracts/Ykit/Locker/ETHLockerPriv.sol/ETHLockerPriv";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockForDays",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "_minimumPrice",
        type: "int256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "canWithdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockForDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x61010060405260405161077538038061077583398101604081905261002391610100565b610fa082106100795760405162461bcd60e51b815260206004820152601760248201527f546f6f206c6f6e67206c6f636b757020706572696f642100000000000000000060448201526064015b60405180910390fd5b60008112156100ca5760405162461bcd60e51b815260206004820152601b60248201527f5072696365206d757374206e6f74206265206e656761746976652100000000006044820152606401610070565b3360805260c09190915260e0524260a052600080546001600160a01b0319166001600160a01b0392909216919091179055610143565b60008060006060848603121561011557600080fd5b83516001600160a01b038116811461012c57600080fd5b602085015160409095015190969495509392505050565b60805160a05160c05160e0516105d16101a46000396000818161012401528181610434015261045a015260008181609201526103d401526000818160d90152610402015260008181610158015281816101f101526102d101526105d16000f3fe6080604052600436106100745760003560e01c80637f386b6c1161004e5780637f386b6c146101125780638da5cb5b1461014657806398d5fdca1461019f578063b51459fe146101b457600080fd5b8063046f82981461008057806326cbee49146100c75780633ccfd60b146100fb57600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b3480156100d357600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b34801561010757600080fd5b506101106101d9565b005b34801561011e57600080fd5b506100b47f000000000000000000000000000000000000000000000000000000000000000081565b34801561015257600080fd5b5061017a7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100be565b3480156101ab57600080fd5b506100b461031c565b3480156101c057600080fd5b506101c96103cc565b60405190151581526020016100be565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102635760405162461bcd60e51b815260206004820152600e60248201527f4163636573732064656e6965642100000000000000000000000000000000000060448201526064015b60405180910390fd5b61026b6103cc565b6102b75760405162461bcd60e51b815260206004820152601460248201527f43616e6e6f742077697468647261772079657421000000000000000000000000604482015260640161025a565b60405173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016904780156108fc02916000818181858888f19350505050158015610319573d6000803e3d6000fd5b50565b60008054604080517ffeaf968c0000000000000000000000000000000000000000000000000000000081529051839273ffffffffffffffffffffffffffffffffffffffff169163feaf968c9160048083019260a09291908290030181865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b091906104ad565b5050509150506305f5e100816103c69190610513565b91505090565b6000426103fc7f00000000000000000000000000000000000000000000000000000000000000006201518061056b565b610426907f0000000000000000000000000000000000000000000000000000000000000000610588565b10156104325750600190565b7f000000000000000000000000000000000000000000000000000000000000000015610488577f000000000000000000000000000000000000000000000000000000000000000061048161031c565b1215905090565b50600090565b805169ffffffffffffffffffff811681146104a857600080fd5b919050565b600080600080600060a086880312156104c557600080fd5b6104ce8661048e565b94506020860151935060408601519250606086015191506104f16080870161048e565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b60008261053057634e487b7160e01b600052601260045260246000fd5b7f8000000000000000000000000000000000000000000000000000000000000000821460001984141615610566576105666104fd565b500590565b8082028115828204841417610582576105826104fd565b92915050565b80820180821115610582576105826104fd56fea2646970667358221220ba7b4851fa410a7926017a153360e37e1a405cd0048bbc76121cd05a00d919d164736f6c63430008140033";

type ETHLockerPrivConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHLockerPrivConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHLockerPriv__factory extends ContractFactory {
  constructor(...args: ETHLockerPrivConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _priceFeed: PromiseOrValue<string>,
    _lockForDays: PromiseOrValue<BigNumberish>,
    _minimumPrice: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ETHLockerPriv> {
    return super.deploy(
      _priceFeed,
      _lockForDays,
      _minimumPrice,
      overrides || {}
    ) as Promise<ETHLockerPriv>;
  }
  override getDeployTransaction(
    _priceFeed: PromiseOrValue<string>,
    _lockForDays: PromiseOrValue<BigNumberish>,
    _minimumPrice: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _priceFeed,
      _lockForDays,
      _minimumPrice,
      overrides || {}
    );
  }
  override attach(address: string): ETHLockerPriv {
    return super.attach(address) as ETHLockerPriv;
  }
  override connect(signer: Signer): ETHLockerPriv__factory {
    return super.connect(signer) as ETHLockerPriv__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHLockerPrivInterface {
    return new utils.Interface(_abi) as ETHLockerPrivInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ETHLockerPriv {
    return new Contract(address, _abi, signerOrProvider) as ETHLockerPriv;
  }
}
