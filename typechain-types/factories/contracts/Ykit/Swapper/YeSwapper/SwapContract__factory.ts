/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SwapContract,
  SwapContractInterface,
} from "../../../../../contracts/Ykit/Swapper/YeSwapper/SwapContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenType",
        type: "string",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "baseAmount",
        type: "uint256",
      },
    ],
    name: "swapBaseToQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quoteAmount",
        type: "uint256",
      },
    ],
    name: "swapQuoteToBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract ERC20SwapVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawQuote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161148038038061148083398101604081905261002f9161012b565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100db565b506001600160a01b0381166100b65760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964207661756c7420616464726573730000000000000000000000604482015260640161004d565b600180546001600160a01b0319166001600160a01b039290921691909117905561015b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013d57600080fd5b81516001600160a01b038116811461015457600080fd5b9392505050565b6113168061016a6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063d551d13011610076578063f3ae6c5f1161005b578063f3ae6c5f14610155578063f98bea1514610168578063fbfa77cf1461017b57600080fd5b8063d551d1301461012f578063f2fde38b1461014257600080fd5b80638da5cb5b116100a75780638da5cb5b146100e057806390690fdf14610109578063c0a5f6ff1461011c57600080fd5b806327bed8ee146100c3578063715018a6146100d8575b600080fd5b6100d66100d136600461124f565b61018e565b005b6100d661040d565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100d661011736600461124f565b610421565b6100d661012a36600461124f565b6107cf565b6100d661013d36600461124f565b6109bf565b6100d661015036600461127d565b610cec565b6100d661016336600461124f565b610d43565b6100d661017636600461124f565b610fb2565b6001546100ed906001600160a01b031681565b600081116101e35760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b6001546040805163c55dae6360e01b815290516000926001600160a01b03169163c55dae639160048083019260209291908290030181865afa15801561022d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025191906112a1565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb91906112be565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018490529082169063095ea7b3906044016020604051808303816000875af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034391906112be565b506001546040516311f9fbc960e21b81526001600160a01b03838116600483015260248201859052909116906347e7ef2490604401600060405180830381600087803b15801561039257600080fd5b505af11580156103a6573d6000803e3d6000fd5b50505050336001600160a01b03167f643e927b32d5bfd08eccd2fcbd97057ad413850f857a2359639114e8e8dd3d7b83604051610401918152604060208201819052600490820152634241534560e01b606082015260800190565b60405180910390a25050565b6104156111a1565b61041f60006111e7565b565b600081116104715760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101da565b6001546040805163c55dae6360e01b815290516000926001600160a01b03169163c55dae639160048083019260209291908290030181865afa1580156104bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104df91906112a1565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a91906112a1565b6040516323b872dd60e01b81523360048201523060248201526044810185905290915083906001600160a01b038416906323b872dd906064016020604051808303816000875af11580156105b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d691906112be565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529084169063095ea7b3906044016020604051808303816000875af115801561062a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064e91906112be565b506001546040516311f9fbc960e21b81526001600160a01b03858116600483015260248201879052909116906347e7ef2490604401600060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505060015460405163f3fef3a360e01b81526001600160a01b03868116600483015260248201869052909116925063f3fef3a39150604401600060405180830381600087803b15801561070357600080fd5b505af1158015610717573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b038516925063a9059cbb91506044015b6020604051808303816000875af1158015610769573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078d91906112be565b50604080518581526020810183905233917f77f92a1b6a1a11de8ca49515ad4c1fad45632dd3442167d74b90b304a3c7a758910160405180910390a250505050565b6000811161081f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101da565b60015460408051630217a4b760e41b815290516000926001600160a01b03169163217a4b709160048083019260209291908290030181865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906112a1565b60015460405163f3fef3a360e01b81526001600160a01b0380841660048301526024820186905292935091169063f3fef3a390604401600060405180830381600087803b1580156108dd57600080fd5b505af11580156108f1573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b038416925063a9059cbb91506044016020604051808303816000875af1158015610942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096691906112be565b50336001600160a01b03167f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d9751836040516104019181526040602082018190526005908201526451554f544560d81b606082015260800190565b60008111610a0f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101da565b6001546040805163c55dae6360e01b815290516000926001600160a01b03169163c55dae639160048083019260209291908290030181865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d91906112a1565b90506000600160009054906101000a90046001600160a01b03166001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af891906112a1565b6040516323b872dd60e01b81523360048201523060248201526044810185905290915083906001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7491906112be565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018690529083169063095ea7b3906044016020604051808303816000875af1158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec91906112be565b506001546040516311f9fbc960e21b81526001600160a01b03848116600483015260248201879052909116906347e7ef2490604401600060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505060015460405163f3fef3a360e01b81526001600160a01b03878116600483015260248201869052909116925063f3fef3a39150604401600060405180830381600087803b158015610ca157600080fd5b505af1158015610cb5573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b038616925063a9059cbb915060440161074a565b610cf46111a1565b6001600160a01b038116610d37576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016101da565b610d40816111e7565b50565b60008111610d935760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101da565b60015460408051630217a4b760e41b815290516000926001600160a01b03169163217a4b709160048083019260209291908290030181865afa158015610ddd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e0191906112a1565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7b91906112be565b5060015460405163095ea7b360e01b81526001600160a01b039182166004820152602481018490529082169063095ea7b3906044016020604051808303816000875af1158015610ecf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef391906112be565b506001546040516311f9fbc960e21b81526001600160a01b03838116600483015260248201859052909116906347e7ef2490604401600060405180830381600087803b158015610f4257600080fd5b505af1158015610f56573d6000803e3d6000fd5b50505050336001600160a01b03167f643e927b32d5bfd08eccd2fcbd97057ad413850f857a2359639114e8e8dd3d7b836040516104019181526040602082018190526005908201526451554f544560d81b606082015260800190565b600081116110025760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016101da565b6001546040805163c55dae6360e01b815290516000926001600160a01b03169163c55dae639160048083019260209291908290030181865afa15801561104c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107091906112a1565b60015460405163f3fef3a360e01b81526001600160a01b0380841660048301526024820186905292935091169063f3fef3a390604401600060405180830381600087803b1580156110c057600080fd5b505af11580156110d4573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018590526001600160a01b038416925063a9059cbb91506044016020604051808303816000875af1158015611125573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114991906112be565b50336001600160a01b03167f485f1bb6524c663555797e00171a10f341656e59b02d6b557a0a38ba7d5d975183604051610401918152604060208201819052600490820152634241534560e01b606082015260800190565b6000546001600160a01b0316331461041f576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016101da565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561126157600080fd5b5035919050565b6001600160a01b0381168114610d4057600080fd5b60006020828403121561128f57600080fd5b813561129a81611268565b9392505050565b6000602082840312156112b357600080fd5b815161129a81611268565b6000602082840312156112d057600080fd5b8151801515811461129a57600080fdfea2646970667358221220a8d22ac900eb834fc63f12db0b1fcf96481991c0e50ccb8c795ae556488a90dc64736f6c63430008140033";

type SwapContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapContract__factory extends ContractFactory {
  constructor(...args: SwapContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapContract> {
    return super.deploy(_vault, overrides || {}) as Promise<SwapContract>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override attach(address: string): SwapContract {
    return super.attach(address) as SwapContract;
  }
  override connect(signer: Signer): SwapContract__factory {
    return super.connect(signer) as SwapContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapContractInterface {
    return new utils.Interface(_abi) as SwapContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapContract {
    return new Contract(address, _abi, signerOrProvider) as SwapContract;
  }
}
