/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  UniSwapper,
  UniSwapperInterface,
} from "../../../../../contracts/Ykit/Swapper/UniSwapper/UniSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "SwapExactInputSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "SwapExactOutputSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMaximum",
        type: "uint256",
      },
    ],
    name: "swapExactOutputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610a83380380610a8383398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516109d76100ac60003960008181604b0152818160d20152818161016b015281816101f30152818161029f015261033801526109d76000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063c31c9c0714610046578063ccdc1e891461008a578063dfd00055146100ab575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009d6100983660046107e2565b6100be565b604051908152602001610081565b61009d6100b9366004610837565b61028b565b60006100cc86333085610410565b6100f7867f000000000000000000000000000000000000000000000000000000000000000084610552565b60408051610100810182526001600160a01b038089168252878116602083015262ffffff87168284015233606083015242608083015260a0820186905260c08201859052600060e083015291517fdb3e219800000000000000000000000000000000000000000000000000000000815290917f0000000000000000000000000000000000000000000000000000000000000000169063db3e2198906101a0908490600401610882565b6020604051808303816000875af11580156101bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e391906108f6565b91508282101561022d57610219877f00000000000000000000000000000000000000000000000000000000000000006000610552565b61022d8733610228858761090f565b610686565b604080516001600160a01b038981168252881660208201529081018590526060810183905233907f5e45e9a1670dc192153d7d4d8f24a47ca9587706e467a5565f17242a6d2e614e9060800160405180910390a25095945050505050565b600061029985333085610410565b6102c4857f000000000000000000000000000000000000000000000000000000000000000084610552565b60408051610100810182526001600160a01b038088168252868116602083015262ffffff86168284015233606083015242608083015260a08201859052600060c0830181905260e083015291517f414bf38900000000000000000000000000000000000000000000000000000000815290917f0000000000000000000000000000000000000000000000000000000000000000169063414bf3899061036d908490600401610882565b6020604051808303816000875af115801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b091906108f6565b604080516001600160a01b038981168252881660208201529081018590526060810182905290925033907f0c5cbd3275c9472cbbca5a3ab4a32af6373b0ff49cb43bac9df132336b2aa1479060800160405180910390a250949350505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03167f23b872dd00000000000000000000000000000000000000000000000000000000179052915160009283929088169161048d9190610949565b6000604051808303816000865af19150503d80600081146104ca576040519150601f19603f3d011682016040523d82523d6000602084013e6104cf565b606091505b50915091508180156104f95750805115806104f95750808060200190518101906104f99190610978565b61054a5760405162461bcd60e51b815260206004820152600360248201527f535446000000000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167f095ea7b30000000000000000000000000000000000000000000000000000000017905291516000928392908716916105c79190610949565b6000604051808303816000865af19150503d8060008114610604576040519150601f19603f3d011682016040523d82523d6000602084013e610609565b606091505b50915091508180156106335750805115806106335750808060200190518101906106339190610978565b61067f5760405162461bcd60e51b815260206004820152600260248201527f53410000000000000000000000000000000000000000000000000000000000006044820152606401610541565b5050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b03167fa9059cbb0000000000000000000000000000000000000000000000000000000017905291516000928392908716916106fb9190610949565b6000604051808303816000865af19150503d8060008114610738576040519150601f19603f3d011682016040523d82523d6000602084013e61073d565b606091505b50915091508180156107675750805115806107675750808060200190518101906107679190610978565b61067f5760405162461bcd60e51b815260206004820152600260248201527f53540000000000000000000000000000000000000000000000000000000000006044820152606401610541565b80356001600160a01b03811681146107ca57600080fd5b919050565b803562ffffff811681146107ca57600080fd5b600080600080600060a086880312156107fa57600080fd5b610803866107b3565b9450610811602087016107b3565b935061081f604087016107cf565b94979396509394606081013594506080013592915050565b6000806000806080858703121561084d57600080fd5b610856856107b3565b9350610864602086016107b3565b9250610872604086016107cf565b9396929550929360600135925050565b61010081016108f082846001600160a01b0380825116835280602083015116602084015262ffffff60408301511660408401528060608301511660608401526080820151608084015260a082015160a084015260c082015160c08401528060e08301511660e0840152505050565b92915050565b60006020828403121561090857600080fd5b5051919050565b818103818111156108f0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000825160005b8181101561096a5760208186018101518583015201610950565b506000920191825250919050565b60006020828403121561098a57600080fd5b8151801515811461099a57600080fd5b939250505056fea2646970667358221220eb97b0c90a50cc618c92c72bf94881f6bce8a7e18c1dfc9f471834223ab7398e64736f6c63430008140033";

type UniSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniSwapper__factory extends ContractFactory {
  constructor(...args: UniSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniSwapper> {
    return super.deploy(_swapRouter, overrides || {}) as Promise<UniSwapper>;
  }
  override getDeployTransaction(
    _swapRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapRouter, overrides || {});
  }
  override attach(address: string): UniSwapper {
    return super.attach(address) as UniSwapper;
  }
  override connect(signer: Signer): UniSwapper__factory {
    return super.connect(signer) as UniSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniSwapperInterface {
    return new utils.Interface(_abi) as UniSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniSwapper {
    return new Contract(address, _abi, signerOrProvider) as UniSwapper;
  }
}
