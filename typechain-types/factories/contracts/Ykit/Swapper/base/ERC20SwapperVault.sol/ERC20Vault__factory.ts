/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC20Vault,
  ERC20VaultInterface,
} from "../../../../../../contracts/Ykit/Swapper/base/ERC20SwapperVault.sol/ERC20Vault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "quoteDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ca5380380610ca583398101604081905261002f91610169565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100fd565b506001600160a01b0382161580159061008057506001600160a01b03811615155b6100cc5760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640161004d565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561019c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461016457600080fd5b919050565b6000806040838503121561017c57600080fd5b6101858361014d565b91506101936020840161014d565b90509250929050565b610afa806101ab6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80638da5cb5b11610076578063c55dae631161005b578063c55dae6314610182578063f2fde38b14610195578063f3fef3a3146101a857600080fd5b80638da5cb5b1461015e578063c35082a91461016f57600080fd5b806347e7ef24116100a757806347e7ef2414610121578063715018a61461013657806383f230371461013e57600080fd5b8063217a4b70146100c35780632248ebe1146100f3575b600080fd5b6002546100d6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101136101013660046109ce565b60036020526000908152604090205481565b6040519081526020016100ea565b61013461012f3660046109f0565b6101bb565b005b61013461049d565b61011361014c3660046109ce565b60046020526000908152604090205481565b6000546001600160a01b03166100d6565b61011361017d366004610a1a565b6104b1565b6001546100d6906001600160a01b031681565b6101346101a33660046109ce565b610528565b6101346101b63660046109f0565b61057f565b600081116102105760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b6001546001600160a01b038381169116148061023957506002546001600160a01b038381169116145b6102755760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610207565b6001546001600160a01b0390811690831603610374576001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190610a4d565b61034a5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610207565b3360009081526003602052604081208054839290610369908490610a9e565b909155506104589050565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190610a4d565b6104335760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610207565b3360009081526004602052604081208054839290610452908490610a9e565b90915550505b6040518181526001600160a01b0383169033907f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a7906020015b60405180910390a35050565b6104a5610904565b6104af600061094a565b565b6001546000906001600160a01b03908116908416036104e957506001600160a01b038116600090815260036020526040902054610522565b6002546001600160a01b039081169084160361051e57506001600160a01b038116600090815260046020526040902054610522565b5060005b92915050565b610530610904565b6001600160a01b038116610573576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610207565b61057c8161094a565b50565b600081116105cf5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610207565b6001546001600160a01b03838116911614806105f857506002546001600160a01b038381169116145b6106345760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606401610207565b6001546001600160a01b039081169083160361078b57336000908152600360205260409020548111156106a95760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610207565b33600090815260036020526040812080548392906106c8908490610ab1565b909155505060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561071e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107429190610a4d565b6107865760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610207565b6108c7565b336000908152600460205260409020548111156107ea5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610207565b3360009081526004602052604081208054839290610809908490610ab1565b909155505060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190610a4d565b6108c75760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610207565b6040518181526001600160a01b0383169033907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90602001610491565b6000546001600160a01b031633146104af576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610207565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146109c957600080fd5b919050565b6000602082840312156109e057600080fd5b6109e9826109b2565b9392505050565b60008060408385031215610a0357600080fd5b610a0c836109b2565b946020939093013593505050565b60008060408385031215610a2d57600080fd5b610a36836109b2565b9150610a44602084016109b2565b90509250929050565b600060208284031215610a5f57600080fd5b815180151581146109e957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561052257610522610a6f565b8181038181111561052257610522610a6f56fea2646970667358221220f55586ebdd5ddddb11b13214db5ef05754152ff28a0fe9198898650491cf194b64736f6c63430008140033";

type ERC20VaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20VaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Vault__factory extends ContractFactory {
  constructor(...args: ERC20VaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _baseToken: PromiseOrValue<string>,
    _quoteToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Vault> {
    return super.deploy(
      _baseToken,
      _quoteToken,
      overrides || {}
    ) as Promise<ERC20Vault>;
  }
  override getDeployTransaction(
    _baseToken: PromiseOrValue<string>,
    _quoteToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_baseToken, _quoteToken, overrides || {});
  }
  override attach(address: string): ERC20Vault {
    return super.attach(address) as ERC20Vault;
  }
  override connect(signer: Signer): ERC20Vault__factory {
    return super.connect(signer) as ERC20Vault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20VaultInterface {
    return new utils.Interface(_abi) as ERC20VaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Vault {
    return new Contract(address, _abi, signerOrProvider) as ERC20Vault;
  }
}
