/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RelayerManager,
  RelayerManagerInterface,
} from "../../../../../contracts/Ykit/Managers/RelayerManager/RelayerManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_accountManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "refundAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "refundToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "refundAmount",
        type: "uint256",
      },
    ],
    name: "Refund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signedHash",
        type: "bytes32",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "refundToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "refundAddress",
        type: "address",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executedTransactions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "refundToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "refundAddress",
        type: "address",
      },
    ],
    name: "getSignHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161099b38038061099b83398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610888806101136000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a9838a3c1161005b578063a9838a3c146100df578063affed0e0146100f2578063b276a8ad14610109578063f2fde38b1461011c57600080fd5b8063715018a6146100825780638691d34c1461008c5780638da5cb5b146100c4575b600080fd5b61008a61012f565b005b6100af61009a36600461050a565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6000546040516001600160a01b0390911681526020016100bb565b6100af6100ed36600461053f565b610143565b6100fb60025481565b6040519081526020016100bb565b6100fb61011736600461060d565b610308565b61008a61012a3660046106ff565b610393565b6101376103ea565b6101416000610430565b565b6000805a905060006101938a8a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060025491508b90508a8a8a610308565b60008181526003602052604090205490915060ff1615610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5472616e73616374696f6e20616c72656164792065786563757465640000000060448201526064015b60405180910390fd5b6002805490600061022483610737565b9091555050600081815260036020526040808220805460ff191660011790555181906001600160a01b038d169061025e908d908d90610750565b6000604051808303816000865af19150503d806000811461029b576040519150601f19603f3d011682016040523d82523d6000602084013e6102a0565b606091505b50915091506102b38c858b8b8b8b610498565b8115158c6001600160a01b03167f7da4525a280527268ba2e963ee6c1b18f43c9507bcb1d2560f652ab17c76e90a83866040516102f1929190610784565b60405180910390a3509a9950505050505050505050565b60008787878787878760405160200161032797969594939291906107bf565b60408051601f198184030181529082905280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000091830191909152603c820152605c01604051602081830303815290604052805190602001209050979650505050505050565b61039b6103ea565b6001600160a01b0381166103de576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526000600482015260240161020b565b6103e781610430565b50565b6000546001600160a01b03163314610141576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161020b565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005a6104a59087610822565b905060006104b3868361083b565b604080516001600160a01b03878116825260208201849052929350828616928b16917f22edd2bbb0b0afbdcf90d91da8a5e2100f8d8f67cdc766dee1742e9a36d6add3910160405180910390a35050505050505050565b60006020828403121561051c57600080fd5b5035919050565b80356001600160a01b038116811461053a57600080fd5b919050565b600080600080600080600060c0888a03121561055a57600080fd5b61056388610523565b9650602088013567ffffffffffffffff8082111561058057600080fd5b818a0191508a601f83011261059457600080fd5b8135818111156105a357600080fd5b8b60208285010111156105b557600080fd5b60208301985080975050505060408801359350606088013592506105db60808901610523565b91506105e960a08901610523565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a03121561062857600080fd5b61063188610523565b9650602088013567ffffffffffffffff8082111561064e57600080fd5b818a0191508a601f83011261066257600080fd5b813581811115610674576106746105f7565b604051601f8201601f19908116603f0116810190838211818310171561069c5761069c6105f7565b816040528281528d60208487010111156106b557600080fd5b82602086016020830137600060208483010152809a5050505050506040880135945060608801359350608088013592506106f160a08901610523565b91506105e960c08901610523565b60006020828403121561071157600080fd5b61071a82610523565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161074957610749610721565b5060010190565b8183823760009101908152919050565b60005b8381101561077b578181015183820152602001610763565b50506000910152565b60408152600083518060408401526107a3816060850160208801610760565b602083019390935250601f91909101601f191601606001919050565b60006bffffffffffffffffffffffff19808a60601b16835288516107ea816014860160208d01610760565b90920160148101979097525060348601949094526054850192909252606090811b831660748501521b166088820152609c0192915050565b8181038181111561083557610835610721565b92915050565b80820281158282048414176108355761083561072156fea264697066735822122077adfb2830e58d8a30cfff7dfff3a682b572253ac4952b76582e6a5b2068c0d364736f6c63430008140033";

type RelayerManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerManager__factory extends ContractFactory {
  constructor(...args: RelayerManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _accountManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerManager> {
    return super.deploy(
      _accountManager,
      overrides || {}
    ) as Promise<RelayerManager>;
  }
  override getDeployTransaction(
    _accountManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_accountManager, overrides || {});
  }
  override attach(address: string): RelayerManager {
    return super.attach(address) as RelayerManager;
  }
  override connect(signer: Signer): RelayerManager__factory {
    return super.connect(signer) as RelayerManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerManagerInterface {
    return new utils.Interface(_abi) as RelayerManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerManager {
    return new Contract(address, _abi, signerOrProvider) as RelayerManager;
  }
}
