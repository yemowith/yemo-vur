/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  YVault,
  YVaultInterface,
} from "../../../../../contracts/Ykit/Vault/YVault.sol/YVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161067238038061067283398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b2565b80516001600160a01b038116811461007a57600080fd5b919050565b6000806040838503121561009257600080fd5b61009b83610063565b91506100a960208401610063565b90509250929050565b6105b1806100c16000396000f3fe60806040526004361061005e5760003560e01c806338d52e0f1161004357806338d52e0f146100cc5780638da5cb5b14610104578063b6b55f251461012457600080fd5b806327e235e31461006a5780632e1a7d4d146100aa57600080fd5b3661006557005b600080fd5b34801561007657600080fd5b506100976100853660046104b5565b60026020526000908152604090205481565b6040519081526020015b60405180910390f35b3480156100b657600080fd5b506100ca6100c53660046104e5565b610144565b005b3480156100d857600080fd5b506001546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020016100a1565b34801561011057600080fd5b506000546100ec906001600160a01b031681565b34801561013057600080fd5b506100ca61013f3660046104e5565b61032f565b600081116101995760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b336000908152600260205260409020548111156101f85760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610190565b336000908152600260205260408120805483929061021790849061052d565b90915550506001546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190610546565b6102f65760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610190565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b6000811161037f5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610190565b6001546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156103ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104139190610546565b61045f5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610190565b336000908152600260205260408120805483929061047e908490610568565b909155505060405181815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c490602001610324565b6000602082840312156104c757600080fd5b81356001600160a01b03811681146104de57600080fd5b9392505050565b6000602082840312156104f757600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b81810381811115610540576105406104fe565b92915050565b60006020828403121561055857600080fd5b815180151581146104de57600080fd5b80820180821115610540576105406104fe56fea26469706673582212205b17802e1ce60ea2add3acac9d72f7456dc9af79ff8bf82f360031352e0ffe5664736f6c63430008140033";

type YVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YVault__factory extends ContractFactory {
  constructor(...args: YVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _asset: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YVault> {
    return super.deploy(_asset, _owner, overrides || {}) as Promise<YVault>;
  }
  override getDeployTransaction(
    _asset: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_asset, _owner, overrides || {});
  }
  override attach(address: string): YVault {
    return super.attach(address) as YVault;
  }
  override connect(signer: Signer): YVault__factory {
    return super.connect(signer) as YVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YVaultInterface {
    return new utils.Interface(_abi) as YVaultInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): YVault {
    return new Contract(address, _abi, signerOrProvider) as YVault;
  }
}
