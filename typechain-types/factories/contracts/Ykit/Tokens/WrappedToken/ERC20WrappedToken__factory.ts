/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20WrappedToken,
  ERC20WrappedTokenInterface,
} from "../../../../../contracts/Ykit/Tokens/WrappedToken/ERC20WrappedToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Wrap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "contract IERC20",
        name: "_underlying",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080516020808201835260008083528351918201909352918252339160036200003d838262000187565b5060046200004c828262000187565b5050506001600160a01b0381166200007e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000898162000090565b5062000253565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010d57607f821691505b6020821081036200012e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018257600081815260208120601f850160051c810160208610156200015d5750805b601f850160051c820191505b818110156200017e5782815560010162000169565b5050505b505050565b81516001600160401b03811115620001a357620001a3620000e2565b620001bb81620001b48454620000f8565b8462000134565b602080601f831160018114620001f35760008415620001da5750858301515b600019600386901b1c1916600185901b1785556200017e565b600085815260208120601f198616915b82811015620002245788860151825594840194600190910190840162000203565b5085821015620002435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61126f80620002636000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063de0e9a3e11610066578063de0e9a3e14610243578063de7ea79d14610256578063ea598cb014610269578063f2fde38b1461027c57600080fd5b80638da5cb5b146101de57806395d89b41146101ef578063a9059cbb146101f7578063dd62ed3e1461020a57600080fd5b8063313ce567116100d3578063313ce5671461016b5780636f307dc31461018057806370a08231146101ab578063715018a6146101d457600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61028f565b60405161011a9190610e1d565b60405180910390f35b610136610131366004610e80565b610321565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610eac565b61033b565b60095460405160ff909116815260200161011a565b600654610193906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61014a6101b9366004610eed565b6001600160a01b031660009081526020819052604090205490565b6101dc61035f565b005b6005546001600160a01b0316610193565b61010d610373565b610136610205366004610e80565b610382565b61014a610218366004610f11565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101dc610251366004610f4a565b610390565b6101dc610264366004611006565b610586565b6101dc610277366004610f4a565b61070e565b6101dc61028a366004610eed565b61095f565b60606007805461029e90611095565b80601f01602080910402602001604051908101604052809291908181526020018280546102ca90611095565b80156103175780601f106102ec57610100808354040283529160200191610317565b820191906000526020600020905b8154815290600101906020018083116102fa57829003601f168201915b5050505050905090565b60003361032f8185856109b6565b60019150505b92915050565b6000336103498582856109c8565b610354858585610a5f565b506001949350505050565b610367610abe565b6103716000610b04565b565b60606008805461029e90611095565b60003361032f818585610a5f565b600081116103e55760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b3360009081526020819052604090205481111561046a5760405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74207772617070656420746f6b656e2062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103dc565b6104743382610b63565b6006546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050291906110cf565b61054e5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103dc565b60405181815233907f5dd085b6070b4cae004f84daafd199fd55b0bdfa11c3a802baffe89c2419d8c29060200160405180910390a250565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156105d15750825b905060008267ffffffffffffffff1660011480156105ee5750303b155b9050811580156105fc575080155b15610633576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561066757845468ff00000000000000001916680100000000000000001785555b60076106738a8261113f565b506008610680898261113f565b506009805460ff191660ff89161790556006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038816179055831561070357845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b6000811161075e5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016103dc565b6006546040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201526000916001600160a01b03169063dd62ed3e90604401602060405180830381865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea91906111ff565b90508181101561083c5760405162461bcd60e51b815260206004820152601960248201527f436865636b2074686520746f6b656e20616c6c6f77616e63650000000000000060448201526064016103dc565b6006546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156108ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d091906110cf565b61091c5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103dc565b6109263383610b9d565b60405182815233907fb61d00fdfee32467c7d81db64c811ae60c104c346debf36a14afe84b8fce59e59060200160405180910390a25050565b610967610abe565b6001600160a01b0381166109aa576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016103dc565b6109b381610b04565b50565b6109c38383836001610bd3565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610a595781811015610a4a576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016103dc565b610a5984848484036000610bd3565b50505050565b6001600160a01b038316610a8957604051634b637e8f60e11b8152600060048201526024016103dc565b6001600160a01b038216610ab35760405163ec442f0560e01b8152600060048201526024016103dc565b6109c3838383610cda565b6005546001600160a01b03163314610371576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016103dc565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b8d57604051634b637e8f60e11b8152600060048201526024016103dc565b610b9982600083610cda565b5050565b6001600160a01b038216610bc75760405163ec442f0560e01b8152600060048201526024016103dc565b610b9960008383610cda565b6001600160a01b038416610c16576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016103dc565b6001600160a01b038316610c59576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016103dc565b6001600160a01b0380851660009081526001602090815260408083209387168352929052208290558015610a5957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ccc91815260200190565b60405180910390a350505050565b6001600160a01b038316610d05578060026000828254610cfa9190611218565b90915550610d909050565b6001600160a01b03831660009081526020819052604090205481811015610d71576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016103dc565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610dac57600280548290039055610dcb565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e1091815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610e4a57858101830151858201604001528201610e2e565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146109b357600080fd5b60008060408385031215610e9357600080fd5b8235610e9e81610e6b565b946020939093013593505050565b600080600060608486031215610ec157600080fd5b8335610ecc81610e6b565b92506020840135610edc81610e6b565b929592945050506040919091013590565b600060208284031215610eff57600080fd5b8135610f0a81610e6b565b9392505050565b60008060408385031215610f2457600080fd5b8235610f2f81610e6b565b91506020830135610f3f81610e6b565b809150509250929050565b600060208284031215610f5c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610f8a57600080fd5b813567ffffffffffffffff80821115610fa557610fa5610f63565b604051601f8301601f19908116603f01168101908282118183101715610fcd57610fcd610f63565b81604052838152866020858801011115610fe657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561101c57600080fd5b843567ffffffffffffffff8082111561103457600080fd5b61104088838901610f79565b9550602087013591508082111561105657600080fd5b5061106387828801610f79565b935050604085013560ff8116811461107a57600080fd5b9150606085013561108a81610e6b565b939692955090935050565b600181811c908216806110a957607f821691505b6020821081036110c957634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156110e157600080fd5b81518015158114610f0a57600080fd5b601f8211156109c357600081815260208120601f850160051c810160208610156111185750805b601f850160051c820191505b8181101561113757828155600101611124565b505050505050565b815167ffffffffffffffff81111561115957611159610f63565b61116d816111678454611095565b846110f1565b602080601f8311600181146111a2576000841561118a5750858301515b600019600386901b1c1916600185901b178555611137565b600085815260208120601f198616915b828110156111d1578886015182559484019460019091019084016111b2565b50858210156111ef5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561121157600080fd5b5051919050565b8082018082111561033557634e487b7160e01b600052601160045260246000fdfea2646970667358221220c2c9db5d423716e7d33b675500a2c3a05bd926c647d473bef66c2bf617029b8e64736f6c63430008140033";

type ERC20WrappedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WrappedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20WrappedToken__factory extends ContractFactory {
  constructor(...args: ERC20WrappedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20WrappedToken> {
    return super.deploy(overrides || {}) as Promise<ERC20WrappedToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20WrappedToken {
    return super.attach(address) as ERC20WrappedToken;
  }
  override connect(signer: Signer): ERC20WrappedToken__factory {
    return super.connect(signer) as ERC20WrappedToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WrappedTokenInterface {
    return new utils.Interface(_abi) as ERC20WrappedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WrappedToken {
    return new Contract(address, _abi, signerOrProvider) as ERC20WrappedToken;
  }
}
