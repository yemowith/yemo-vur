/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ContractFactory,
  ContractFactoryInterface,
} from "../../../../../contracts/Ykit/ContractFactory/ContractFactory.sol/ContractFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "implementationAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "ContractDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "ContractRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "constructorArgs",
        type: "bytes",
      },
    ],
    name: "deployContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "getContractInfo",
    outputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractNames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "registerContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61111c806100a56000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a6146100e8578063819f34b3146100f05780638da5cb5b14610110578063f2fde38b1461012b57600080fd5b806337df1e9d1461008257806357ae71d4146100a05780635e3fa843146100d3575b600080fd5b61008a61013e565b604051610097919061090c565b60405180910390f35b6100b36100ae366004610a21565b610217565b604080516001600160a01b03938416815292909116602083015201610097565b6100e66100e1366004610a21565b610237565b005b6100e66103d6565b6101036100fe366004610a99565b6103ea565b6040516100979190610ad6565b6000546040516001600160a01b039091168152602001610097565b6100e6610139366004610ae9565b610520565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561020e57838290600052602060002001805461018190610b12565b80601f01602080910402602001604051908101604052809291908181526020018280546101ad90610b12565b80156101fa5780601f106101cf576101008083540402835291602001916101fa565b820191906000526020600020905b8154815290600101906020018083116101dd57829003601f168201915b505050505081526020019060010190610162565b50505050905090565b600080610222610577565b61022c84846105bd565b915091509250929050565b61023f610577565b60018260405161024f9190610b4c565b9081526040519081900360200190206001015460ff16156102dd5760405162461bcd60e51b815260206004820152602a60248201527f436f6e747261637420776974682074686973206e616d6520616c72656164792060448201527f726567697374657265640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6040805160608101825282815260016020820181905260025482840152915190919061030a908590610b4c565b908152604051908190036020019020815181906103279082610bb7565b5060208201516001828101805460ff191692151592909217909155604090920151600291820155805491820181556000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace016103848382610bb7565b50816040516103939190610b4c565b60405180910390207f56a1a529dd5cac083e8cfe5a5fbaace41d018ef9672d889fab0c1d30953a9ca5826040516103ca9190610ad6565b60405180910390a25050565b6103de610577565b6103e86000610847565b565b606060006001836040516103fe9190610b4c565b908152602001604051809103902060405180606001604052908160008201805461042790610b12565b80601f016020809104026020016040519081016040528092919081815260200182805461045390610b12565b80156104a05780601f10610475576101008083540402835291602001916104a0565b820191906000526020600020905b81548152906001019060200180831161048357829003601f168201915b5050509183525050600182015460ff1615156020808301919091526002909201546040909101528101519091506105195760405162461bcd60e51b815260206004820152601760248201527f436f6e7472616374206e6f74207265676973746572656400000000000000000060448201526064016102d4565b5192915050565b610528610577565b6001600160a01b03811661056b576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102d4565b61057481610847565b50565b6000546001600160a01b031633146103e8576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102d4565b6000806105c8610577565b60006001856040516105da9190610b4c565b908152602001604051809103902060405180606001604052908160008201805461060390610b12565b80601f016020809104026020016040519081016040528092919081815260200182805461062f90610b12565b801561067c5780601f106106515761010080835404028352916020019161067c565b820191906000526020600020905b81548152906001019060200180831161065f57829003601f168201915b5050509183525050600182015460ff1615156020808301919091526002909201546040909101528101519091506106f55760405162461bcd60e51b815260206004820152601760248201527f436f6e7472616374206e6f74207265676973746572656400000000000000000060448201526064016102d4565b83516060901561072957815160405161071391908790602001610c77565b604051602081830303815290604052905061072d565b5080515b60008151602083016000f09050803b61074557600080fd5b6000604051610753906108af565b604051809103906000f08015801561076f573d6000803e3d6000fd5b506040517fd784d4260000000000000000000000000000000000000000000000000000000081526001600160a01b0384811660048301529192509082169063d784d42690602401600060405180830381600087803b1580156107d057600080fd5b505af11580156107e4573d6000803e3d6000fd5b50505050806001600160a01b0316826001600160a01b03168960405161080a9190610b4c565b604051908190038120907f83a465d786f75fe59853d884cce44735e6f4ec345a502886194f09a87253d67d90600090a49097909650945050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61044080610ca783390190565b60005b838110156108d75781810151838201526020016108bf565b50506000910152565b600081518084526108f88160208601602086016108bc565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561096157603f1988860301845261094f8583516108e0565b94509285019290850190600101610933565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561099f5761099f61096e565b604051601f8501601f19908116603f011681019082821181831017156109c7576109c761096e565b816040528093508581528686860111156109e057600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112610a0b57600080fd5b610a1a83833560208501610984565b9392505050565b60008060408385031215610a3457600080fd5b823567ffffffffffffffff80821115610a4c57600080fd5b610a58868387016109fa565b93506020850135915080821115610a6e57600080fd5b508301601f81018513610a8057600080fd5b610a8f85823560208401610984565b9150509250929050565b600060208284031215610aab57600080fd5b813567ffffffffffffffff811115610ac257600080fd5b610ace848285016109fa565b949350505050565b602081526000610a1a60208301846108e0565b600060208284031215610afb57600080fd5b81356001600160a01b0381168114610a1a57600080fd5b600181811c90821680610b2657607f821691505b602082108103610b4657634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610b5e8184602087016108bc565b9190910192915050565b601f821115610bb257600081815260208120601f850160051c81016020861015610b8f5750805b601f850160051c820191505b81811015610bae57828155600101610b9b565b5050505b505050565b815167ffffffffffffffff811115610bd157610bd161096e565b610be581610bdf8454610b12565b84610b68565b602080601f831160018114610c1a5760008415610c025750858301515b600019600386901b1c1916600185901b178555610bae565b600085815260208120601f198616915b82811015610c4957888601518255948401946001909101908401610c2a565b5085821015610c675787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008351610c898184602088016108bc565b835190830190610c9d8183602088016108bc565b0194935050505056fe608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61039b806100a56000396000f3fe60806040526004361061005e5760003560e01c80638da5cb5b116100435780638da5cb5b14610192578063d784d426146101b0578063f2fde38b146101d0576100a3565b80635c60da1b14610141578063715018a61461017d576100a3565b366100a357604080516020808252600090820152339134917f606834f57405380c4fb88d1f4850326ad3885f014bab3b568dfbf7a041eef738910160405180910390a3005b6001546001600160a01b03168061011b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496d706c656d656e746174696f6e206e6f74207365740000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e80801561013a573d6000f35b3d6000fd5b005b34801561014d57600080fd5b50600154610161906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561018957600080fd5b5061013f6101f0565b34801561019e57600080fd5b506000546001600160a01b0316610161565b3480156101bc57600080fd5b5061013f6101cb366004610335565b610204565b3480156101dc57600080fd5b5061013f6101eb366004610335565b61023b565b6101f8610292565b61020260006102d8565b565b61020c610292565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610243610292565b6001600160a01b038116610286576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610112565b61028f816102d8565b50565b6000546001600160a01b03163314610202576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610112565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561034757600080fd5b81356001600160a01b038116811461035e57600080fd5b939250505056fea2646970667358221220d870690832b660a3d1f13b511df92e20fc43361e2243b2547ba79cd9700c2b8a64736f6c63430008140033a264697066735822122090311f5516eb8cd26fefe5f279e24a3d36aa6bf8379e839c11dfd90425703b4d64736f6c63430008140033";

type ContractFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractFactory__factory extends ContractFactory {
  constructor(...args: ContractFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractFactory> {
    return super.deploy(overrides || {}) as Promise<ContractFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractFactory {
    return super.attach(address) as ContractFactory;
  }
  override connect(signer: Signer): ContractFactory__factory {
    return super.connect(signer) as ContractFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractFactoryInterface {
    return new utils.Interface(_abi) as ContractFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractFactory {
    return new Contract(address, _abi, signerOrProvider) as ContractFactory;
  }
}
