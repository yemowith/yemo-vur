/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  StakingContract,
  StakingContractInterface,
} from "../../../../../contracts/Ykit/Stake/StakingContract.sol/StakingContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dailyRewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_weeklyRewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyRewardRate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum StakingContract.StakingPeriod",
        name: "period",
        type: "uint8",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthlyRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_dailyRewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_weeklyRewardRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_monthlyRewardRate",
        type: "uint256",
      },
    ],
    name: "setRewardRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum StakingContract.StakingPeriod",
        name: "period",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "enum StakingContract.StakingPeriod",
        name: "period",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weeklyRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516112ae3803806112ae83398101604081905261002f91610157565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f81610107565b506000805460ff60a01b19169055600180546001600160a01b031916331790556001600160a01b0384166100d55760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e20616464726573730000000000000000000000604482015260640161004d565b600280546001600160a01b0319166001600160a01b0395909516949094179093556003919091556004556005556101a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121561016d57600080fd5b84516001600160a01b038116811461018457600080fd5b60208601516040870151606090970151919890975090945092505050565b6110fd806101b16000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806372f702f3116100b2578063c1e3d2dd11610081578063d82e396211610066578063d82e396214610259578063eaa1b9f31461026c578063f2fde38b1461027557600080fd5b8063c1e3d2dd14610248578063c7b8981c1461025157600080fd5b806372f702f3146101f15780637a2105b71461021c5780638456cb591461022f5780638da5cb5b1461023757600080fd5b80633e29caeb116100ee5780633e29caeb146101bb5780633f4ba83a146101c45780635c975abb146101cc578063715018a6146101e957600080fd5b80630700037d1461012057806310087fb11461015357806316934fc4146101685780632def6620146101b3575b600080fd5b61014061012e366004610f22565b60076020526000908152604090205481565b6040519081526020015b60405180910390f35b610166610161366004610f52565b610288565b005b6101a3610176366004610f22565b60066020526000908152604090208054600182015460029092015490919060ff8082169161010090041684565b60405161014a9493929190610fbe565b6101666105c5565b61014060055481565b6101666108a4565b600054600160a01b900460ff16604051901515815260200161014a565b610166610941565b600254610204906001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b61016661022a366004610fea565b610955565b61016661096b565b6000546001600160a01b0316610204565b61014060035481565b610166610a08565b610140610267366004610f22565b610c38565b61014060045481565b610166610283366004610f22565b610d47565b600054600160a01b900460ff16156102da5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064015b60405180910390fd5b600154600160a01b900460ff16156103345760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d1565b6001805460ff60a01b1916600160a01b179055816103945760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016102d1565b33600090815260066020526040902060020154610100900460ff16156103fc5760405162461bcd60e51b815260206004820152600e60248201527f416c7265616479207374616b656400000000000000000000000000000000000060448201526064016102d1565b6002546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561046c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104909190611016565b6104dc5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c6564000000000000000000000060448201526064016102d1565b604051806080016040528083815260200142815260200182600281111561050557610505610f86565b81526001602091820181905233600090815260068352604090819020845181559284015183830155830151600280840180549293909260ff191691849081111561055157610551610f86565b021790555060609190910151600290910180549115156101000261ff001990921691909117905560405133907f8acf475137e0cd74ca7f611d16b1e6383ec9a9c71a8e5b85967781b9c7214d11906105ac9085908590611038565b60405180910390a250506001805460ff60a01b19169055565b600054600160a01b900460ff16156106125760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102d1565b600154600160a01b900460ff161561066c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d1565b6001805460ff60a01b1916600160a01b1790553360009081526006602052604090206002810154610100900460ff166106e75760405162461bcd60e51b815260206004820152600f60248201527f4e6f20616374697665207374616b65000000000000000000000000000000000060448201526064016102d1565b60028101546106f89060ff16610d9e565b81600101546107079190611062565b4210156107565760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e6720706572696f64206e6f742079657420656e6465640000000060448201526064016102d1565b8054600080835560028301805461ff001916905561077333610c38565b33600090815260076020526040812080549293508392909190610797908490611062565b909155505060025460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108119190611016565b61085d5760405162461bcd60e51b815260206004820152601560248201527f546f6b656e207472616e73666572206661696c6564000000000000000000000060448201526064016102d1565b60405182815233907f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f759060200160405180910390a250506001805460ff60a01b1916905550565b6001546001600160a01b031633146108fe5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573657200000000000000000000000060448201526064016102d1565b6000805460ff60a01b191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b610949610e10565b6109536000610e56565b565b61095d610e10565b600392909255600455600555565b6001546001600160a01b031633146109c55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573657200000000000000000000000060448201526064016102d1565b6000805460ff60a01b1916600160a01b1790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610937565b600054600160a01b900460ff1615610a555760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102d1565b600154600160a01b900460ff1615610aaf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d1565b6001805460ff60a01b1916600160a01b1790553360009081526007602052604090205480610b1f5760405162461bcd60e51b815260206004820152601460248201527f4e6f207265776172647320617661696c61626c6500000000000000000000000060448201526064016102d1565b3360008181526007602052604080822091909155600254905163a9059cbb60e01b81526004810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610b83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba79190611016565b610bf35760405162461bcd60e51b815260206004820152601660248201527f526577617264207472616e73666572206661696c65640000000000000000000060448201526064016102d1565b60405181815233907f8a43c4352486ec339f487f64af78ca5cbf06cd47833f073d3baf3a193e5031619060200160405180910390a2506001805460ff60a01b19169055565b6001600160a01b038116600090815260066020908152604080832081516080810183528154815260018201549381019390935260028082015485949384019160ff90911690811115610c8c57610c8c610f86565b6002811115610c9d57610c9d610f86565b815260029190910154610100900460ff1615156020909101526060810151909150610ccb5750600092915050565b6000610cda8260400151610d9e565b90506000826020015142610cee919061107b565b905081811015610d0357506000949350505050565b6000610d128460400151610ebe565b905060008383838760000151610d28919061108e565b610d32919061108e565b610d3c91906110a5565b979650505050505050565b610d4f610e10565b6001600160a01b038116610d92576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016102d1565b610d9b81610e56565b50565b600080826002811115610db357610db3610f86565b03610dc2575062015180919050565b6001826002811115610dd657610dd6610f86565b03610de5575062093a80919050565b6002826002811115610df957610df9610f86565b03610e08575062278d00919050565b506000919050565b6000546001600160a01b03163314610953576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016102d1565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080826002811115610ed357610ed3610f86565b03610ee057505060035490565b6001826002811115610ef457610ef4610f86565b03610f0157505060045490565b6002826002811115610f1557610f15610f86565b03610e0857505060055490565b600060208284031215610f3457600080fd5b81356001600160a01b0381168114610f4b57600080fd5b9392505050565b60008060408385031215610f6557600080fd5b82359150602083013560038110610f7b57600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60038110610fba57634e487b7160e01b600052602160045260246000fd5b9052565b8481526020810184905260808101610fd96040830185610f9c565b821515606083015295945050505050565b600080600060608486031215610fff57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561102857600080fd5b81518015158114610f4b57600080fd5b82815260408101610f4b6020830184610f9c565b634e487b7160e01b600052601160045260246000fd5b808201808211156110755761107561104c565b92915050565b818103818111156110755761107561104c565b80820281158282048414176110755761107561104c565b6000826110c257634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212201ddebdcc2fa7e4583ddd6140c5c71170d172ba6c9eea2047dd97a220a484057964736f6c63430008140033";

type StakingContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingContract__factory extends ContractFactory {
  constructor(...args: StakingContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingToken: PromiseOrValue<string>,
    _dailyRewardRate: PromiseOrValue<BigNumberish>,
    _weeklyRewardRate: PromiseOrValue<BigNumberish>,
    _monthlyRewardRate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingContract> {
    return super.deploy(
      _stakingToken,
      _dailyRewardRate,
      _weeklyRewardRate,
      _monthlyRewardRate,
      overrides || {}
    ) as Promise<StakingContract>;
  }
  override getDeployTransaction(
    _stakingToken: PromiseOrValue<string>,
    _dailyRewardRate: PromiseOrValue<BigNumberish>,
    _weeklyRewardRate: PromiseOrValue<BigNumberish>,
    _monthlyRewardRate: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _dailyRewardRate,
      _weeklyRewardRate,
      _monthlyRewardRate,
      overrides || {}
    );
  }
  override attach(address: string): StakingContract {
    return super.attach(address) as StakingContract;
  }
  override connect(signer: Signer): StakingContract__factory {
    return super.connect(signer) as StakingContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingContractInterface {
    return new utils.Interface(_abi) as StakingContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingContract {
    return new Contract(address, _abi, signerOrProvider) as StakingContract;
  }
}
