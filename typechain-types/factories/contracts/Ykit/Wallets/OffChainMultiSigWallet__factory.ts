/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  OffChainMultiSigWallet,
  OffChainMultiSigWalletInterface,
} from "../../../../contracts/Ykit/Wallets/OffChainMultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "ThresholdChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_OWNER_COUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "addOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newThreshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signatures",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200108e3803806200108e833981016040819052620000349162000244565b60008151118015620000485750600a815111155b620000a55760405162461bcd60e51b815260206004820152602260248201527f4d53573a204e6f7420656e6f756768206f7220746f6f206d616e79206f776e65604482015261727360f01b60648201526084015b60405180910390fd5b600082118015620000b7575080518211155b620001055760405162461bcd60e51b815260206004820152601660248201527f4d53573a20496e76616c6964207468726573686f6c640000000000000000000060448201526064016200009c565b8051600255600182905560005b8151811015620001dd5760016003600084848151811062000137576200013762000324565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181106200018b576200018b62000324565b60200260200101516001600160a01b03167f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360405160405180910390a280620001d4816200033a565b91505062000112565b5060405182907f6c4ce60fd690e1216286a10b875c5662555f10774484e58142cedd7a90781baa90600090a2505062000362565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200023f57600080fd5b919050565b600080604083850312156200025857600080fd5b8251602080850151919350906001600160401b03808211156200027a57600080fd5b818601915086601f8301126200028f57600080fd5b815181811115620002a457620002a462000211565b8060051b604051601f19603f83011681018181108582111715620002cc57620002cc62000211565b604052918252848201925083810185019189831115620002eb57600080fd5b938501935b828510156200031457620003048562000227565b84529385019392850192620002f0565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200035b57634e487b7160e01b600052601160045260246000fd5b5060010190565b610d1c80620003726000396000f3fe60806040526004361061009a5760003560e01c80637065cb4811610069578063b94885461161004e578063b9488546146101b4578063d74f8edd146101ca578063da0980c7146101df57600080fd5b80637065cb481461017e578063affed0e01461019e57600080fd5b8063173825d9146100d35780632f54bf6e146100f557806342cde4e81461013a578063694e80c31461015e57600080fd5b366100ce57604051339034907f8863e458255c600ae3e61be347822f3ee57088c8538b68b5dd2357e682e59e1990600090a3005b600080fd5b3480156100df57600080fd5b506100f36100ee366004610a12565b6101ff565b005b34801561010157600080fd5b50610125610110366004610a12565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561014657600080fd5b5061015060015481565b604051908152602001610131565b34801561016a57600080fd5b506100f3610179366004610a34565b61037a565b34801561018a57600080fd5b506100f3610199366004610a12565b610465565b3480156101aa57600080fd5b5061015060005481565b3480156101c057600080fd5b5061015060025481565b3480156101d657600080fd5b50610150600a81565b3480156101eb57600080fd5b506100f36101fa366004610af0565b6105de565b33301461025e5760405162461bcd60e51b815260206004820152602260248201527f4d53573a2043616c6c696e67206163636f756e74206973206e6f742077616c6c604482015261195d60f21b60648201526084015b60405180910390fd5b600154600254116102b15760405162461bcd60e51b815260206004820152601860248201527f4d53573a20546f6f20666577206f776e657273206c65667400000000000000006044820152606401610255565b6001600160a01b03811660009081526003602052604090205460ff166103195760405162461bcd60e51b815260206004820152601160248201527f4d53573a204e6f7420616e206f776e65720000000000000000000000000000006044820152606401610255565b60016002600082825461032c9190610b84565b90915550506001600160a01b038116600081815260036020526040808220805460ff19169055517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9190a250565b3330146103d45760405162461bcd60e51b815260206004820152602260248201527f4d53573a2043616c6c696e67206163636f756e74206973206e6f742077616c6c604482015261195d60f21b6064820152608401610255565b6000811180156103e657506002548111155b6104325760405162461bcd60e51b815260206004820152601a60248201527f4d53573a20496e76616c6964206e6577207468726573686f6c640000000000006044820152606401610255565b600181905560405181907f6c4ce60fd690e1216286a10b875c5662555f10774484e58142cedd7a90781baa90600090a250565b3330146104bf5760405162461bcd60e51b815260206004820152602260248201527f4d53573a2043616c6c696e67206163636f756e74206973206e6f742077616c6c604482015261195d60f21b6064820152608401610255565b600a600254106105115760405162461bcd60e51b815260206004820152601c60248201527f4d53573a204d41585f4f574e45525f434f554e542072656163686564000000006044820152606401610255565b6001600160a01b03811660009081526003602052604090205460ff161561057a5760405162461bcd60e51b815260206004820152601260248201527f4d53573a20416c7265616479206f776e657200000000000000000000000000006044820152606401610255565b60016002600082825461058d9190610b9d565b90915550506001600160a01b038116600081815260036020526040808220805460ff19166001179055517f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c39190a250565b600080600080604185516105f29190610bb0565b90506001548110156106465760405162461bcd60e51b815260206004820152601a60248201527f4d53573a204e6f7420656e6f756768207369676e6174757265730000000000006044820152606401610255565b60008054604051610686917f190000000000000000000000000000000000000000000000000000000000000091849130918e918e918e9190602001610bf6565b60405160208183030381529060405280519060200120905060016000808282546106b09190610b9d565b909155506000905080805b84811015610927576106cd8982610976565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101889052929a509098509650600090600190605c0160408051601f198184030181528282528051602091820120600084529083018083525260ff8c1690820152606081018a90526080810189905260a0016020604051602081039080840390855afa15801561076c573d6000803e3d6000fd5b505050602060405103519050826001600160a01b0316816001600160a01b0316116107d95760405162461bcd60e51b815260206004820152601d60248201527f4d53573a204261646c79206f726465726564207369676e6174757265730000006044820152606401610255565b6001600160a01b038116600090815260036020526040902054909250829060ff16156109145761080a600185610b9d565b935060015484106109145760008d6001600160a01b03168d8d6040516108309190610c7e565b60006040518083038185875af1925050503d806000811461086d576040519150601f19603f3d011682016040523d82523d6000602084013e610872565b606091505b50509050806108c35760405162461bcd60e51b815260206004820152601960248201527f4d53573a2045787465726e616c2063616c6c206661696c6564000000000000006044820152606401610255565b8c8e6001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8e6040516108fd9190610c9a565b60405180910390a350505050505050505050610970565b508061091f81610ccd565b9150506106bb565b5060405162461bcd60e51b815260206004820181905260248201527f4d53573a204e6f7420656e6f7567682076616c6964207369676e6174757265736044820152606401610255565b50505050565b6041808202830160208101516040820151919092015160ff169190601b8314806109a357508260ff16601c145b6109ef5760405162461bcd60e51b815260206004820152600e60248201527f4d53573a20496e76616c696420760000000000000000000000000000000000006044820152606401610255565b9250925092565b80356001600160a01b0381168114610a0d57600080fd5b919050565b600060208284031215610a2457600080fd5b610a2d826109f6565b9392505050565b600060208284031215610a4657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a7457600080fd5b813567ffffffffffffffff80821115610a8f57610a8f610a4d565b604051601f8301601f19908116603f01168101908282118183101715610ab757610ab7610a4d565b81604052838152866020858801011115610ad057600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610b0657600080fd5b610b0f856109f6565b935060208501359250604085013567ffffffffffffffff80821115610b3357600080fd5b610b3f88838901610a63565b93506060870135915080821115610b5557600080fd5b50610b6287828801610a63565b91505092959194509250565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b9757610b97610b6e565b92915050565b80820180821115610b9757610b97610b6e565b600082610bcd57634e487b7160e01b600052601260045260246000fd5b500490565b60005b83811015610bed578181015183820152602001610bd5565b50506000910152565b60007fff00000000000000000000000000000000000000000000000000000000000000808a1683528089166001840152506bffffffffffffffffffffffff19808860601b166002840152808760601b1660168401525084602a8301528351610c6581604a850160208801610bd2565b604a920191820192909252606a01979650505050505050565b60008251610c90818460208701610bd2565b9190910192915050565b6020815260008251806020840152610cb9816040850160208701610bd2565b601f01601f19169190910160400192915050565b600060018201610cdf57610cdf610b6e565b506001019056fea2646970667358221220c998c3e9179c42a2d177fec65e436b648f5835d44a7fc15a20ce51e3802eb04864736f6c63430008140033";

type OffChainMultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OffChainMultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OffChainMultiSigWallet__factory extends ContractFactory {
  constructor(...args: OffChainMultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _threshold: PromiseOrValue<BigNumberish>,
    _owners: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OffChainMultiSigWallet> {
    return super.deploy(
      _threshold,
      _owners,
      overrides || {}
    ) as Promise<OffChainMultiSigWallet>;
  }
  override getDeployTransaction(
    _threshold: PromiseOrValue<BigNumberish>,
    _owners: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_threshold, _owners, overrides || {});
  }
  override attach(address: string): OffChainMultiSigWallet {
    return super.attach(address) as OffChainMultiSigWallet;
  }
  override connect(signer: Signer): OffChainMultiSigWallet__factory {
    return super.connect(signer) as OffChainMultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OffChainMultiSigWalletInterface {
    return new utils.Interface(_abi) as OffChainMultiSigWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OffChainMultiSigWallet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OffChainMultiSigWallet;
  }
}
