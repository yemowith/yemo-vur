/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ProxyDeployer,
  ProxyDeployerInterface,
} from "../../../../contracts/Ykit/AccountManager/ProxyDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161018a38038061018a83398101604081905261002f91610126565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b03808211156100ac576100ac61006b565b604051601f8301601f19908116603f011681019082821181831017156100d4576100d461006b565b816040528381526020925086838588010111156100f057600080fd5b600091505b8382101561011257858201830151818301840152908201906100f5565b600093810190920192909252949350505050565b6000806040838503121561013957600080fd5b82516001600160401b038082111561015057600080fd5b61015c86838701610081565b9350602085015191508082111561017257600080fd5b5061017f85828601610081565b915050925092905056fe";

type ProxyDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyDeployer__factory extends ContractFactory {
  constructor(...args: ProxyDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bytecode: PromiseOrValue<BytesLike>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyDeployer> {
    return super.deploy(
      bytecode,
      data,
      overrides || {}
    ) as Promise<ProxyDeployer>;
  }
  override getDeployTransaction(
    bytecode: PromiseOrValue<BytesLike>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bytecode, data, overrides || {});
  }
  override attach(address: string): ProxyDeployer {
    return super.attach(address) as ProxyDeployer;
  }
  override connect(signer: Signer): ProxyDeployer__factory {
    return super.connect(signer) as ProxyDeployer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyDeployerInterface {
    return new utils.Interface(_abi) as ProxyDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyDeployer {
    return new Contract(address, _abi, signerOrProvider) as ProxyDeployer;
  }
}
