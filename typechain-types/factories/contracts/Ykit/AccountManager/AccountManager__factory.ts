/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  AccountManager,
  AccountManagerInterface,
} from "../../../../contracts/Ykit/AccountManager/AccountManager";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountRemovedFromWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeByAccount",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeStaticByAccount",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61175e806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806392ae18b0116100765780639dca362f1161005b5780639dca362f1461019d578063e43252d7146101a5578063f2fde38b146101b857600080fd5b806392ae18b0146101575780639b19251a1461016a57600080fd5b80638ab1d681116100a75780638ab1d681146101135780638da5cb5b146101265780639218ca0b1461013757600080fd5b80635e5c06e2146100c3578063715018a614610109575b600080fd5b6100ec6100d1366004610909565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101116101cb565b005b610111610121366004610909565b6101df565b6000546001600160a01b03166100ec565b61014a610145366004610974565b610230565b60405161010091906109d5565b61014a610165366004610a23565b610407565b61018d610178366004610909565b60026020526000908152604090205460ff1681565b6040519015158152602001610100565b6101116105dd565b6101116101b3366004610909565b610785565b6101116101c6366004610909565b6107d9565b6101d3610830565b6101dd6000610876565b565b6101e7610830565b6001600160a01b038116600081815260026020526040808220805460ff19169055517f7cc6493d49441a4f53fd5837310f0734aa1d77bd3701d4fb44ef57562e239bf19190a250565b6001600160a01b038416600090815260026020526040902054606090859060ff166102a25760405162461bcd60e51b815260206004820152601760248201527f4163636f756e74206e6f742077686974656c697374656400000000000000000060448201526064015b60405180910390fd5b6001600160a01b03808716600090815260016020526040902054168061030a5760405162461bcd60e51b815260206004820152601660248201527f4163636f756e7420646f6573206e6f74206578697374000000000000000000006044820152606401610299565b60006060600088888860405160240161032593929190610abb565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fe8bf2d5f0000000000000000000000000000000000000000000000000000000017815281519192506000808383895afa945050503d6040519250601f1960208201168301604052808352806000602085013e50826103fa5760405162461bcd60e51b815260206004820152601260248201527f5374617469632063616c6c206661696c656400000000000000000000000000006044820152606401610299565b5098975050505050505050565b6001600160a01b038516600090815260026020526040902054606090869060ff166104745760405162461bcd60e51b815260206004820152601760248201527f4163636f756e74206e6f742077686974656c69737465640000000000000000006044820152606401610299565b6001600160a01b0380881660009081526001602052604090205416806104dc5760405162461bcd60e51b815260206004820152601660248201527f4163636f756e7420646f6573206e6f74206578697374000000000000000000006044820152606401610299565b600060606000898989896040516024016104f99493929190610ae7565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb61d27f60000000000000000000000000000000000000000000000000000000017815281519192506000808383828a5af1945050503d6040519250601f1960208201168301604052808352806000602085013e50826105cf5760405162461bcd60e51b815260206004820152601260248201527f5472616e73616374696f6e206661696c656400000000000000000000000000006044820152606401610299565b509998505050505050505050565b336000908152600160205260409020546001600160a01b0316156106435760405162461bcd60e51b815260206004820152601660248201527f4163636f756e7420616c726561647920657869737473000000000000000000006044820152606401610299565b6000604051610651906108d3565b604051809103906000f08015801561066d573d6000803e3d6000fd5b509050600060405161067e906108e0565b604051809103906000f08015801561069a573d6000803e3d6000fd5b506040517fd784d4260000000000000000000000000000000000000000000000000000000081526001600160a01b0380831660048301529192509083169063d784d42690602401600060405180830381600087803b1580156106fb57600080fd5b505af115801561070f573d6000803e3d6000fd5b505033600081815260016020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03891690811790915591519182529193507fac631f3001b55ea1509cf3d7e74898f85392a61a76e8149181ae1259622dabc892500160405180910390a25050565b61078d610830565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517fbcad3e56607b6406d740aa2cdbeedb8fa353e7e935f3cfabd5eece16cf9ee8f09190a250565b6107e1610830565b6001600160a01b038116610824576040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260006004820152602401610299565b61082d81610876565b50565b6000546001600160a01b031633146101dd576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610299565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61063280610b1b83390190565b6105dc8061114d83390190565b80356001600160a01b038116811461090457600080fd5b919050565b60006020828403121561091b57600080fd5b610924826108ed565b9392505050565b60008083601f84011261093d57600080fd5b50813567ffffffffffffffff81111561095557600080fd5b60208301915083602082850101111561096d57600080fd5b9250929050565b6000806000806060858703121561098a57600080fd5b610993856108ed565b93506109a1602086016108ed565b9250604085013567ffffffffffffffff8111156109bd57600080fd5b6109c98782880161092b565b95989497509550505050565b600060208083528351808285015260005b81811015610a02578581018301518582016040015282016109e6565b506000604082860101526040601f19601f8301168501019250505092915050565b600080600080600060808688031215610a3b57600080fd5b610a44866108ed565b9450610a52602087016108ed565b935060408601359250606086013567ffffffffffffffff811115610a7557600080fd5b610a818882890161092b565b969995985093965092949392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0384168152604060208201526000610ade604083018486610a92565b95945050505050565b6001600160a01b0385168152836020820152606060408201526000610b10606083018486610a92565b969550505050505056fe608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61058d806100a56000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461019d578063d784d426146101bb578063e8bf2d5f146101db578063f2fde38b146101fb5761007b565b80631cff79cd146101195780635c60da1b14610150578063715018a6146101885761007b565b3661007b57005b6001546001600160a01b0316806100f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496d706c656d656e746174696f6e206e6f74207365740000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610112573d6000f35b3d6000fd5b005b34801561012557600080fd5b5061013961013436600461044a565b61021b565b6040516101479291906104cd565b60405180910390f35b34801561015c57600080fd5b50600154610170906001600160a01b031681565b6040516001600160a01b039091168152602001610147565b34801561019457600080fd5b5061011761028d565b3480156101a957600080fd5b506000546001600160a01b0316610170565b3480156101c757600080fd5b506101176101d6366004610525565b6102a1565b3480156101e757600080fd5b506101396101f636600461044a565b6102d8565b34801561020757600080fd5b50610117610216366004610525565b610334565b60006060600080866001600160a01b0316868660405161023c929190610547565b6000604051808303816000865af19150503d8060008114610279576040519150601f19603f3d011682016040523d82523d6000602084013e61027e565b606091505b50909890975095505050505050565b61029561038b565b61029f60006103d1565b565b6102a961038b565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60006060600080866001600160a01b031686866040516102f9929190610547565b600060405180830381855afa9150503d8060008114610279576040519150601f19603f3d011682016040523d82523d6000602084013e61027e565b61033c61038b565b6001600160a01b03811661037f576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016100ea565b610388816103d1565b50565b6000546001600160a01b0316331461029f576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016100ea565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461044557600080fd5b919050565b60008060006040848603121561045f57600080fd5b6104688461042e565b9250602084013567ffffffffffffffff8082111561048557600080fd5b818601915086601f83011261049957600080fd5b8135818111156104a857600080fd5b8760208285010111156104ba57600080fd5b6020830194508093505050509250925092565b821515815260006020604081840152835180604085015260005b81811015610503578581018301518582016060015282016104e7565b506000606082860101526060601f19601f830116850101925050509392505050565b60006020828403121561053757600080fd5b6105408261042e565b9392505050565b818382376000910190815291905056fea2646970667358221220a251083f0b2e51e7e965eef988fa27b45e53f3dbc10cfaa974fc2a7f79a6038b64736f6c63430008140033608060405234801561001057600080fd5b50600080546001600160a01b031916331790556105aa806100326000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b14610051578063a6f9dae114610081578063b61d27f614610096578063e8bf2d5f146100b7575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61009461008f3660046103be565b6100ca565b005b6100a96100a4366004610429565b61014f565b604051610078929190610483565b6100a96100c53660046104db565b61029d565b6000546001600160a01b031633146101155760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b60448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600080546060906001600160a01b031633146101995760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161010c565b600080876001600160a01b03168787876040516101b792919061052e565b60006040518083038185875af1925050503d80600081146101f4576040519150601f19603f3d011682016040523d82523d6000602084013e6101f9565b606091505b50915091508161024b5760405162461bcd60e51b815260206004820152601060248201527f457865637574696f6e206661696c656400000000000000000000000000000000604482015260640161010c565b876001600160a01b03167fcaf938de11c367272220bfd1d2baa99ca46665e7bc4d85f00adb51b90fe1fa9f8888886040516102889392919061053e565b60405180910390a29097909650945050505050565b600080546060906001600160a01b031633146102e75760405162461bcd60e51b81526020600482015260096024820152682737ba1037bbb732b960b91b604482015260640161010c565b600080866001600160a01b0316868660405161030492919061052e565b600060405180830381855afa9150503d806000811461033f576040519150601f19603f3d011682016040523d82523d6000602084013e610344565b606091505b5091509150816103965760405162461bcd60e51b815260206004820152601760248201527f53746174696320657865637574696f6e206661696c6564000000000000000000604482015260640161010c565b90969095509350505050565b80356001600160a01b03811681146103b957600080fd5b919050565b6000602082840312156103d057600080fd5b6103d9826103a2565b9392505050565b60008083601f8401126103f257600080fd5b50813567ffffffffffffffff81111561040a57600080fd5b60208301915083602082850101111561042257600080fd5b9250929050565b6000806000806060858703121561043f57600080fd5b610448856103a2565b935060208501359250604085013567ffffffffffffffff81111561046b57600080fd5b610477878288016103e0565b95989497509550505050565b821515815260006020604081840152835180604085015260005b818110156104b95785810183015185820160600152820161049d565b506000606082860101526060601f19601f830116850101925050509392505050565b6000806000604084860312156104f057600080fd5b6104f9846103a2565b9250602084013567ffffffffffffffff81111561051557600080fd5b610521868287016103e0565b9497909650939450505050565b8183823760009101908152919050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea26469706673582212201a0c1233845fff667c0667f81681cde0b0a10e2106b1aaf4d1c353451381348a64736f6c63430008140033a2646970667358221220bb247f7f15534082e2ea4d4a7627f3421d6cdbe8e2ba6def4e20e7612a6258eb64736f6c63430008140033";

type AccountManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountManager__factory extends ContractFactory {
  constructor(...args: AccountManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AccountManager> {
    return super.deploy(overrides || {}) as Promise<AccountManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AccountManager {
    return super.attach(address) as AccountManager;
  }
  override connect(signer: Signer): AccountManager__factory {
    return super.connect(signer) as AccountManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountManagerInterface {
    return new utils.Interface(_abi) as AccountManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccountManager {
    return new Contract(address, _abi, signerOrProvider) as AccountManager;
  }
}
