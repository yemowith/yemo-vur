/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  WrappedToken,
  WrappedTokenInterface,
} from "../../../../contracts/Ykit/WrappedToken/WrappedToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_underlying",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Unwrap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Wrap",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011ac380380620011ac83398101604081905262000034916200022b565b338383600362000045838262000347565b50600462000054828262000347565b5050506001600160a01b0381166200008757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000928162000114565b506001600160a01b038116620000eb5760405162461bcd60e51b815260206004820181905260248201527f496e76616c696420756e6465726c79696e67206173736574206164647265737360448201526064016200007e565b600680546001600160a01b0319166001600160a01b039290921691909117905550620004139050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018e57600080fd5b81516001600160401b0380821115620001ab57620001ab62000166565b604051601f8301601f19908116603f01168101908282118183101715620001d657620001d662000166565b81604052838152602092508683858801011115620001f357600080fd5b600091505b83821015620002175785820183015181830184015290820190620001f8565b600093810190920192909252949350505050565b6000806000606084860312156200024157600080fd5b83516001600160401b03808211156200025957600080fd5b62000267878388016200017c565b945060208601519150808211156200027e57600080fd5b506200028d868287016200017c565b604086015190935090506001600160a01b0381168114620002ad57600080fd5b809150509250925092565b600181811c90821680620002cd57607f821691505b602082108103620002ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034257600081815260208120601f850160051c810160208610156200031d5750805b601f850160051c820191505b818110156200033e5782815560010162000329565b5050505b505050565b81516001600160401b0381111562000363576200036362000166565b6200037b81620003748454620002b8565b84620002f4565b602080601f831160018114620003b357600084156200039a5750858301515b600019600386901b1c1916600185901b1785556200033e565b600085815260208120601f198616915b82811015620003e457888601518255948401946001909101908401620003c3565b5085821015620004035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d8980620004236000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063dd62ed3e11610066578063dd62ed3e146101f9578063de0e9a3e14610232578063ea598cb014610245578063f2fde38b1461025857600080fd5b8063715018a6146101c35780638da5cb5b146101cd57806395d89b41146101de578063a9059cbb146101e657600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce567146101605780636f307dc31461016f57806370a082311461019a57600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b61010261026b565b60405161010f9190610b98565b60405180910390f35b61012b610126366004610c02565b6102fd565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610c2c565b610317565b6040516012815260200161010f565b600654610182906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b61013f6101a8366004610c68565b6001600160a01b031660009081526020819052604090205490565b6101cb61033b565b005b6005546001600160a01b0316610182565b61010261034f565b61012b6101f4366004610c02565b61035e565b61013f610207366004610c8a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cb610240366004610cbd565b61036c565b6101cb610253366004610cbd565b610563565b6101cb610266366004610c68565b6106cf565b60606003805461027a90610cd6565b80601f01602080910402602001604051908101604052809291908181526020018280546102a690610cd6565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b5050505050905090565b60003361030b818585610726565b60019150505b92915050565b600033610325858285610738565b6103308585856107cf565b506001949350505050565b61034361082e565b61034d6000610874565b565b60606004805461027a90610cd6565b60003361030b8185856107cf565b600081116103c15760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b336000908152602081905260409020548111156104465760405162461bcd60e51b815260206004820152602260248201527f496e73756666696369656e74207772617070656420746f6b656e2062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103b8565b61045033826108de565b6006546040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af11580156104ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104de9190610d10565b61052a5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103b8565b60405181815233907f5dd085b6070b4cae004f84daafd199fd55b0bdfa11c3a802baffe89c2419d8c2906020015b60405180910390a250565b600081116105b35760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064016103b8565b6006546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106479190610d10565b6106935760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c6564000000000000000000000000000000000060448201526064016103b8565b61069d3382610918565b60405181815233907fb61d00fdfee32467c7d81db64c811ae60c104c346debf36a14afe84b8fce59e590602001610558565b6106d761082e565b6001600160a01b03811661071a576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024016103b8565b61072381610874565b50565b610733838383600161094e565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146107c957818110156107ba576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064016103b8565b6107c98484848403600061094e565b50505050565b6001600160a01b0383166107f957604051634b637e8f60e11b8152600060048201526024016103b8565b6001600160a01b0382166108235760405163ec442f0560e01b8152600060048201526024016103b8565b610733838383610a55565b6005546001600160a01b0316331461034d576040517f118cdaa70000000000000000000000000000000000000000000000000000000081523360048201526024016103b8565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661090857604051634b637e8f60e11b8152600060048201526024016103b8565b61091482600083610a55565b5050565b6001600160a01b0382166109425760405163ec442f0560e01b8152600060048201526024016103b8565b61091460008383610a55565b6001600160a01b038416610991576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016103b8565b6001600160a01b0383166109d4576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016103b8565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156107c957826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a4791815260200190565b60405180910390a350505050565b6001600160a01b038316610a80578060026000828254610a759190610d32565b90915550610b0b9050565b6001600160a01b03831660009081526020819052604090205481811015610aec576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016103b8565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b2757600280548290039055610b46565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b8b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610bc557858101830151858201604001528201610ba9565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610bfd57600080fd5b919050565b60008060408385031215610c1557600080fd5b610c1e83610be6565b946020939093013593505050565b600080600060608486031215610c4157600080fd5b610c4a84610be6565b9250610c5860208501610be6565b9150604084013590509250925092565b600060208284031215610c7a57600080fd5b610c8382610be6565b9392505050565b60008060408385031215610c9d57600080fd5b610ca683610be6565b9150610cb460208401610be6565b90509250929050565b600060208284031215610ccf57600080fd5b5035919050565b600181811c90821680610cea57607f821691505b602082108103610d0a57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610d2257600080fd5b81518015158114610c8357600080fd5b8082018082111561031157634e487b7160e01b600052601160045260246000fdfea2646970667358221220126f41e0a3066eb45fc62abf219145f0a8b2b5e1b611214270973966d070424764736f6c63430008140033";

type WrappedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedToken__factory extends ContractFactory {
  constructor(...args: WrappedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _underlying: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WrappedToken> {
    return super.deploy(
      name,
      symbol,
      _underlying,
      overrides || {}
    ) as Promise<WrappedToken>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _underlying: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _underlying,
      overrides || {}
    );
  }
  override attach(address: string): WrappedToken {
    return super.attach(address) as WrappedToken;
  }
  override connect(signer: Signer): WrappedToken__factory {
    return super.connect(signer) as WrappedToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenInterface {
    return new utils.Interface(_abi) as WrappedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrappedToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedToken;
  }
}
