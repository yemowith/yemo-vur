/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EEMT,
  EEMTInterface,
} from "../../../../YemoVur/Ykit/EEMT.sol/EEMT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "EventLog",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "emitEvent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "receiveEventRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102a6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063cbf6b6fe1461003b578063f38b7e0414610062575b600080fd5b61004e610049366004610191565b610075565b604051901515815260200160405180910390f35b61004e610070366004610191565b6100c2565b604051600090429033907f689f31f83a7057622aa12f7a5dedc955f8286fc84b4fa19f18f2c2ffdeaebbf1906100b09087908590889061023b565b60405180910390a25060019392505050565b60006100ce8383610075565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261011557600080fd5b813567ffffffffffffffff80821115610130576101306100d5565b604051601f8301601f19908116603f01168101908282118183101715610158576101586100d5565b8160405283815286602085880101111561017157600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156101a457600080fd5b823567ffffffffffffffff808211156101bc57600080fd5b6101c886838701610104565b935060208501359150808211156101de57600080fd5b506101eb85828601610104565b9150509250929050565b6000815180845260005b8181101561021b576020818501810151868301820152016101ff565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600061024e60608301866101f5565b846020840152828103604084015261026681856101f5565b969550505050505056fea2646970667358221220c233e701d840df3397f84cde4bffafbe6f707785d1dcaa133e5d6ed71a7be70264736f6c63430008140033";

type EEMTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EEMTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EEMT__factory extends ContractFactory {
  constructor(...args: EEMTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EEMT> {
    return super.deploy(overrides || {}) as Promise<EEMT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EEMT {
    return super.attach(address) as EEMT;
  }
  override connect(signer: Signer): EEMT__factory {
    return super.connect(signer) as EEMT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EEMTInterface {
    return new utils.Interface(_abi) as EEMTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EEMT {
    return new Contract(address, _abi, signerOrProvider) as EEMT;
  }
}
