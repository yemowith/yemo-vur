/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DDSP,
  DDSPInterface,
} from "../../../../YemoVur/Ykit/DDSP.sol/DDSP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_cacheAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: true,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "foo",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "bar",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "fax",
        type: "bytes",
      },
    ],
    name: "LogNote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authority",
        type: "address",
      },
    ],
    name: "LogSetAuthority",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "LogSetOwner",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "authority",
    outputs: [
      {
        internalType: "contract DSAthrt",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cache",
    outputs: [
      {
        internalType: "contract DDSPCch",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract DSAthrt",
        name: "authority_",
        type: "address",
      },
    ],
    name: "setAuthority",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cacheAddr",
        type: "address",
      },
    ],
    name: "setCch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dbd38038062000dbd83398101604081905262000034916200028d565b600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26200007d8162000085565b505062000319565b60006200009e336001600160e01b0319833516620001a7565b620000f05760405162461bcd60e51b815260206004820152601460248201527f64732d617574682d756e617574686f72697a656400000000000000000000000060448201526064015b60405180910390fd5b600435602435346001600160a01b0385166200014f5760405162461bcd60e51b815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d7265717569726564006044820152606401620000e7565b600280546001600160a01b0387166001600160a01b031990911617905560405160019450829084903390600080356001600160e01b03191691620001979187913690620002bf565b60405180910390a4505050919050565b6000306001600160a01b03841603620001c35750600162000287565b6001546001600160a01b0390811690841603620001e35750600162000287565b6000546001600160a01b0316620001fd5750600062000287565b60005460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa1580156200025e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002849190620002f5565b90505b92915050565b600060208284031215620002a057600080fd5b81516001600160a01b0381168114620002b857600080fd5b9392505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6000602082840312156200030857600080fd5b81518015158114620002b857600080fd5b610a9480620003296000396000f3fe6080604052600436106100795760003560e01c806360c7d2951161004b57806360c7d295146101185780637a9e5e4b146101505780638da5cb5b14610170578063bf7e214f1461019057005b806313af403514610082578063140df25d146100a25780631cff79cd146100d75780631f6a1eb9146100f757005b3661008057005b005b34801561008e57600080fd5b5061008061009d3660046107dc565b6101b0565b3480156100ae57600080fd5b506100c26100bd3660046107dc565b610265565b60405190151581526020015b60405180910390f35b6100ea6100e53660046108bc565b610380565b6040516100ce9190610952565b61010a610105366004610965565b6104d9565b6040516100ce9291906109bf565b34801561012457600080fd5b50600254610138906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b34801561015c57600080fd5b5061008061016b3660046107dc565b610620565b34801561017c57600080fd5b50600154610138906001600160a01b031681565b34801561019c57600080fd5b50600054610138906001600160a01b031681565b6101c6336000356001600160e01b0319166106ce565b61020e5760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b60448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b600061027d336000356001600160e01b0319166106ce565b6102c05760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b6044820152606401610205565b600435602435346001600160a01b03851661031d5760405162461bcd60e51b815260206004820152601f60248201527f64732d70726f78792d63616368652d616464726573732d7265717569726564006044820152606401610205565b600280546001600160a01b03871673ffffffffffffffffffffffffffffffffffffffff1990911617905560405160019450829084903390600080356001600160e01b0319169161037091879136906109e9565b60405180910390a4505050919050565b6060610398336000356001600160e01b0319166106ce565b6103db5760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b6044820152606401610205565b600435602435346001600160a01b0386166104385760405162461bcd60e51b815260206004820181905260248201527f64732d70726f78792d7461726765742d616464726573732d72657175697265646044820152606401610205565b600080865160208801896113885a03f43d6040519550601f19601f6020830101168601604052808652806000602088013e81156001810361047a578160208801fd5b5050508183336001600160a01b03166000356001600160e01b0319167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916846000366040516104c8939291906109e9565b60405180910390a450505092915050565b6002546040517f8bf4515c0000000000000000000000000000000000000000000000000000000081526000916060916001600160a01b0390911690638bf4515c90610528908790600401610952565b602060405180830381865afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610a1f565b91506001600160a01b038216610608576002546040517f7ed0c3b20000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690637ed0c3b2906105c2908790600401610952565b6020604051808303816000875af11580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190610a1f565b91505b60006106148385610380565b92959294509192505050565b610636336000356001600160e01b0319166106ce565b6106795760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b6044820152606401610205565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b6000306001600160a01b038416036106e8575060016107be565b6001546001600160a01b0390811690841603610706575060016107be565b6000546001600160a01b031661071e575060006107be565b6000546040517fb70096130000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb9190610a3c565b90505b92915050565b6001600160a01b03811681146107d957600080fd5b50565b6000602082840312156107ee57600080fd5b81356107f9816107c4565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261084057600080fd5b813567ffffffffffffffff8082111561085b5761085b610800565b604051601f8301601f19908116603f0116810190828211818310171561088357610883610800565b8160405283815286602085880101111561089c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156108cf57600080fd5b82356108da816107c4565b9150602083013567ffffffffffffffff8111156108f657600080fd5b6109028582860161082f565b9150509250929050565b6000815180845260005b8181101561093257602081850181015186830182015201610916565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107f9602083018461090c565b6000806040838503121561097857600080fd5b823567ffffffffffffffff8082111561099057600080fd5b61099c8683870161082f565b935060208501359150808211156109b257600080fd5b506109028582860161082f565b6001600160a01b03831681526040602082015260006109e1604083018461090c565b949350505050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b600060208284031215610a3157600080fd5b81516107f9816107c4565b600060208284031215610a4e57600080fd5b815180151581146107f957600080fdfea26469706673582212205c9d2678fd79d932c97d03178d82fabf3a1e0302ba3edb2cc1006fb14ab1809764736f6c63430008140033";

type DDSPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DDSPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DDSP__factory extends ContractFactory {
  constructor(...args: DDSPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _cacheAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DDSP> {
    return super.deploy(_cacheAddr, overrides || {}) as Promise<DDSP>;
  }
  override getDeployTransaction(
    _cacheAddr: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_cacheAddr, overrides || {});
  }
  override attach(address: string): DDSP {
    return super.attach(address) as DDSP;
  }
  override connect(signer: Signer): DDSP__factory {
    return super.connect(signer) as DDSP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DDSPInterface {
    return new utils.Interface(_abi) as DDSPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DDSP {
    return new Contract(address, _abi, signerOrProvider) as DDSP;
  }
}
