/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { BOMBA, BOMBAInterface } from "../../../YemoVur/YemoVur.sol/BOMBA";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lqte",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_aftrlqt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addressProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "glstlqltamt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lqt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lstlqltamt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "vur",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610b19380380610b1983398101604081905261002f916100d9565b80806001600160a01b03166080816001600160a01b031681525050806001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610088573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ac91906100d9565b6001600160a01b0390811660a052600180546001600160a01b031916939091169290921790915550610109565b6000602082840312156100eb57600080fd5b81516001600160a01b038116811461010257600080fd5b9392505050565b60805160a0516109d761014260003960008181610230015281816102d601528181610384015261044e0152600060e901526109d76000f3fe6080604052600436106100cb5760003560e01c806355c9f9c11161007457806399ab19511161004e57806399ab19511461025257806399ec53df14610267578063a540743d1461028c57600080fd5b806355c9f9c1146101da57806369328dec146101fe5780637535d2461461021e57600080fd5b80632954018c116100a55780632954018c1461017a5780633fc8cef31461019a57806347e7ef24146101ba57600080fd5b80630542975c146100d75780631b11d0ff146101285780631f5ae0e61461015857600080fd5b366100d257005b600080fd5b3480156100e357600080fd5b5061010b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013457600080fd5b506101486101433660046107a0565b6102ac565b604051901515815260200161011f565b34801561016457600080fd5b50610178610173366004610846565b610412565b005b34801561018657600080fd5b5060015461010b906001600160a01b031681565b3480156101a657600080fd5b5060025461010b906001600160a01b031681565b3480156101c657600080fd5b506101786101d5366004610846565b6104c6565b3480156101e657600080fd5b506101f060005481565b60405190815260200161011f565b34801561020a57600080fd5b50610178610219366004610870565b61061e565b34801561022a57600080fd5b5061010b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561025e57600080fd5b506000546101f0565b34801561027357600080fd5b506101f0610282366004610846565b6000908155919050565b34801561029857600080fd5b506101486102a7366004610846565b61076e565b6000806102b986886108ac565b604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925082918a169063dd62ed3e90604401602060405180830381865afa15801561032a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034e91906108e6565b1015610402576040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905289169063095ea7b3906044016020604051808303816000875af11580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040091906108ff565b505b60019150505b9695505050505050565b6040517f42b0b77c0000000000000000000000000000000000000000000000000000000081523090839083906000906060906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342b0b77c9061048b9088908890889087908990600401610928565b600060405180830381600087803b1580156104a557600080fd5b505af11580156104b9573d6000803e3d6000fd5b5050505050505050505050565b604051636eb1769f60e11b815233600482015230602482015281906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610512573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053691906108e6565b10156105895760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f75676800000000000000000000000060448201526064015b60405180910390fd5b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af11580156105f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061991906108ff565b505050565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa15801561066a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068e91906108e6565b10156106dc5760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f7567680000000000000000000000006044820152606401610580565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610744573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076891906108ff565b50505050565b600061077a8383610412565b5060015b92915050565b80356001600160a01b038116811461079b57600080fd5b919050565b60008060008060008060a087890312156107b957600080fd5b6107c287610784565b955060208701359450604087013593506107de60608801610784565b9250608087013567ffffffffffffffff808211156107fb57600080fd5b818901915089601f83011261080f57600080fd5b81358181111561081e57600080fd5b8a602082850101111561083057600080fd5b6020830194508093505050509295509295509295565b6000806040838503121561085957600080fd5b61086283610784565b946020939093013593505050565b60008060006060848603121561088557600080fd5b61088e84610784565b9250602084013591506108a360408501610784565b90509250925092565b8082018082111561077e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156108f857600080fd5b5051919050565b60006020828403121561091157600080fd5b8151801515811461092157600080fd5b9392505050565b60006001600160a01b03808816835260208188168185015286604085015260a06060850152855191508160a085015260005b828110156109765786810182015185820160c00152810161095a565b5050600060c0828501015260c0601f19601f830116840101915050610408608083018461ffff16905256fea264697066735822122025fad196f4019843543757136a19b0204c57a166f7dd0e3c0d15833d589f986364736f6c63430008140033";

type BOMBAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BOMBAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BOMBA__factory extends ContractFactory {
  constructor(...args: BOMBAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BOMBA> {
    return super.deploy(_addressProvider, overrides || {}) as Promise<BOMBA>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): BOMBA {
    return super.attach(address) as BOMBA;
  }
  override connect(signer: Signer): BOMBA__factory {
    return super.connect(signer) as BOMBA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BOMBAInterface {
    return new utils.Interface(_abi) as BOMBAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BOMBA {
    return new Contract(address, _abi, signerOrProvider) as BOMBA;
  }
}
