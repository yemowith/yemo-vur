/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Liq, LiqInterface } from "../../../YemoVur/YemoVur.sol/Liq";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "provider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lqte",
    type: "event",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "_aftrlqt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "glstlqltamt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "lqt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lstlqltamt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516106d23803806106d283398101604081905261002f916100c7565b6001600160a01b03811660808190526040805163026b1d5f60e01b8152905163026b1d5f916004808201926020929091908290030181865afa158015610079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009d91906100c7565b6001600160a01b031660a052506100eb565b6001600160a01b03811681146100c457600080fd5b50565b6000602082840312156100d957600080fd5b81516100e4816100af565b9392505050565b60805160a0516105ae6101246000396000818161011a0152818161019a01528181610248015261031201526000608701526105ae6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806355c9f9c11161005b57806355c9f9c1146100fe5780637535d2461461011557806399ab19511461013c57806399ec53df1461014457600080fd5b80630542975c146100825780631b11d0ff146100c65780631f5ae0e6146100e9575b600080fd5b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100d96100d43660046103b3565b610157565b60405190151581526020016100bd565b6100fc6100f7366004610459565b6102d6565b005b61010760005481565b6040519081526020016100bd565b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b600054610107565b610107610152366004610459565b61038a565b6000806101648688610483565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015291925082918a169063dd62ed3e90604401602060405180830381865afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021291906104bd565b10156102c6576040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526024820183905289169063095ea7b3906044016020604051808303816000875af11580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c491906104d6565b505b60019150505b9695505050505050565b6040517f42b0b77c0000000000000000000000000000000000000000000000000000000081523090839083906000906060906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906342b0b77c9061034f90889088908890879089906004016104ff565b600060405180830381600087803b15801561036957600080fd5b505af115801561037d573d6000803e3d6000fd5b5050505050505050505050565b6000819055805b92915050565b80356001600160a01b03811681146103ae57600080fd5b919050565b60008060008060008060a087890312156103cc57600080fd5b6103d587610397565b955060208701359450604087013593506103f160608801610397565b9250608087013567ffffffffffffffff8082111561040e57600080fd5b818901915089601f83011261042257600080fd5b81358181111561043157600080fd5b8a602082850101111561044357600080fd5b6020830194508093505050509295509295509295565b6000806040838503121561046c57600080fd5b61047583610397565b946020939093013593505050565b80820180821115610391577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156104cf57600080fd5b5051919050565b6000602082840312156104e857600080fd5b815180151581146104f857600080fd5b9392505050565b60006001600160a01b03808816835260208188168185015286604085015260a06060850152855191508160a085015260005b8281101561054d5786810182015185820160c001528101610531565b5050600060c0828501015260c0601f19601f8301168401019150506102cc608083018461ffff16905256fea2646970667358221220ec4ee7f0f68aae8037a79a9f138c70968a3e65893f1f255faecc8c8ea97c8e7b64736f6c63430008140033";

type LiqConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiqConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Liq__factory extends ContractFactory {
  constructor(...args: LiqConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Liq> {
    return super.deploy(provider, overrides || {}) as Promise<Liq>;
  }
  override getDeployTransaction(
    provider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(provider, overrides || {});
  }
  override attach(address: string): Liq {
    return super.attach(address) as Liq;
  }
  override connect(signer: Signer): Liq__factory {
    return super.connect(signer) as Liq__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiqInterface {
    return new utils.Interface(_abi) as LiqInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Liq {
    return new Contract(address, _abi, signerOrProvider) as Liq;
  }
}
