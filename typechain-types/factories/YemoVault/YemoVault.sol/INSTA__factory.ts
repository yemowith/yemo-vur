/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  INSTA,
  INSTAInterface,
} from "../../../YemoVault/YemoVault.sol/INSTA";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_AppFcA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AppFc",
    outputs: [
      {
        internalType: "contract IInstaIndex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AppFcA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "accnrAdrs",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "accountVersion",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "cast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_accountVersion",
        type: "uint256",
      },
    ],
    name: "nacct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161083e38038061083e83398101604081905261002f916100f9565b600080546001600160a01b03199081166001600160a01b03858116918217845560028054909316908516908117835560405163bb7e70ef60e01b815260048101919091526024810192909252604482018390529190829063bb7e70ef906064016020604051808303816000875af11580156100ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d2919061012c565b90505050505061014e565b80516001600160a01b03811681146100f457600080fd5b919050565b6000806040838503121561010c57600080fd5b610115836100dd565b9150610123602084016100dd565b90509250929050565b60006020828403121561013e57600080fd5b610147826100dd565b9392505050565b6106e18061015d6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063614c2dc611610050578063614c2dc6146100dd578063b9742c94146100f0578063fddd0e721461010357600080fd5b80630c94ee1c1461007757806330390414146100a757806332b93a86146100ca575b600080fd5b60015461008a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ba6100b53660046103e0565b610116565b60405161009e9493929190610441565b60025461008a906001600160a01b031681565b6100ee6100eb3660046104ac565b50565b005b60005461008a906001600160a01b031681565b6100ee6101113660046104d0565b6101e0565b8051808201602090810180516003825292820191909301209152805460018201546002830180546001600160a01b0393841694929093169261015790610529565b80601f016020809104026020016040519081016040528092919081815260200182805461018390610529565b80156101d05780601f106101a5576101008083540402835291602001916101d0565b820191906000526020600020905b8154815290600101906020018083116101b357829003601f168201915b5050505050908060030154905084565b6001546040517fbb7e70ef0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905260006044830181905292169063bb7e70ef906064016020604051808303816000875af1158015610254573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102789190610563565b90506040518060800160405280826001600160a01b03168152602001856001600160a01b03168152602001848152602001838152506003846040516102bd9190610580565b9081526040805160209281900383019020835181547fffffffffffffffffffffffff00000000000000000000000000000000000000009081166001600160a01b0392831617835593850151600183018054909516911617909255820151600282019061032990826105eb565b506060820151816003015590505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261036457600080fd5b813567ffffffffffffffff8082111561037f5761037f61033d565b604051601f8301601f19908116603f011681019082821181831017156103a7576103a761033d565b816040528381528660208588010111156103c057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156103f257600080fd5b813567ffffffffffffffff81111561040957600080fd5b61041584828501610353565b949350505050565b60005b83811015610438578181015183820152602001610420565b50506000910152565b60006001600160a01b0380871683528086166020840152506080604083015283518060808401526104798160a085016020880161041d565b606083019390935250601f91909101601f19160160a0019392505050565b6001600160a01b03811681146100eb57600080fd5b6000602082840312156104be57600080fd5b81356104c981610497565b9392505050565b6000806000606084860312156104e557600080fd5b83356104f081610497565b9250602084013567ffffffffffffffff81111561050c57600080fd5b61051886828701610353565b925050604084013590509250925092565b600181811c9082168061053d57607f821691505b60208210810361055d57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561057557600080fd5b81516104c981610497565b6000825161059281846020870161041d565b9190910192915050565b601f8211156105e657600081815260208120601f850160051c810160208610156105c35750805b601f850160051c820191505b818110156105e2578281556001016105cf565b5050505b505050565b815167ffffffffffffffff8111156106055761060561033d565b610619816106138454610529565b8461059c565b602080601f83116001811461064e57600084156106365750858301515b600019600386901b1c1916600185901b1785556105e2565b600085815260208120601f198616915b8281101561067d5788860151825594840194600190910190840161065e565b508582101561069b5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220468abc1c18a7245a4cc22ec2015b010a7841e43726cc7f017eb31176227d0d1e64736f6c63430008140033";

type INSTAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: INSTAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class INSTA__factory extends ContractFactory {
  constructor(...args: INSTAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _AppFcA: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<INSTA> {
    return super.deploy(_AppFcA, _owner, overrides || {}) as Promise<INSTA>;
  }
  override getDeployTransaction(
    _AppFcA: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_AppFcA, _owner, overrides || {});
  }
  override attach(address: string): INSTA {
    return super.attach(address) as INSTA;
  }
  override connect(signer: Signer): INSTA__factory {
    return super.connect(signer) as INSTA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): INSTAInterface {
    return new utils.Interface(_abi) as INSTAInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): INSTA {
    return new Contract(address, _abi, signerOrProvider) as INSTA;
  }
}
