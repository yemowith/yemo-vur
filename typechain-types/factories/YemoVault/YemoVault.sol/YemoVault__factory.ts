/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  YemoVault,
  YemoVaultInterface,
} from "../../../YemoVault/YemoVault.sol/YemoVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dplr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ddsp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_eemt",
        type: "address",
      },
      {
        internalType: "address",
        name: "appfa",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AppFc",
    outputs: [
      {
        internalType: "contract IInstaIndex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "AppFcA",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "address",
        name: "accnrAdrs",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "accountVersion",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "appOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "cast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nOwn",
        type: "address",
      },
    ],
    name: "cngOwn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ddsp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dplr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eemt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_code",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_accountVersion",
        type: "uint256",
      },
    ],
    name: "nacct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e5d38038062000e5d833981016040819052620000349162000155565b600080546001600160a01b038681166001600160a01b0319928316178355600180548783169084161790556002805486831690841617815560038054868416908516811790915560058054938b1693909416831790935560405163bb7e70ef60e01b81526004810192909252602482015260448101839052879284928492909190829063bb7e70ef906064016020604051808303816000875af1158015620000e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001069190620001c5565b5050600780546001600160a01b0319166001600160a01b03959095169490941790935550620001ea9650505050505050565b80516001600160a01b03811681146200015057600080fd5b919050565b600080600080600060a086880312156200016e57600080fd5b620001798662000138565b9450620001896020870162000138565b9350620001996040870162000138565b9250620001a96060870162000138565b9150620001b96080870162000138565b90509295509295909350565b600060208284031215620001d857600080fd5b620001e38262000138565b9392505050565b610c6380620001fa6000396000f3fe6080604052600436106100d65760003560e01c806369328dec1161007f578063b9742c9411610059578063b9742c941461023f578063bd25d5951461025f578063e059f3481461027f578063fddd0e721461029f57600080fd5b806369328dec146101df5780638c5df0b2146101ff5780638da5cb5b1461021f57600080fd5b80633a936b90116100b05780633a936b901461016f57806347e7ef241461019f578063614c2dc6146101c157600080fd5b80630c94ee1c146100e2578063303904141461011f57806332b93a861461014f57600080fd5b366100dd57005b600080fd5b3480156100ee57600080fd5b50600454610102906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012b57600080fd5b5061013f61013a3660046108ba565b6102bf565b604051610116949392919061091b565b34801561015b57600080fd5b50600554610102906001600160a01b031681565b34801561017b57600080fd5b5061018f61018a366004610986565b610389565b6040519015158152602001610116565b3480156101ab57600080fd5b506101bf6101ba3660046109aa565b61041d565b005b3480156101cd57600080fd5b506101bf6101dc366004610986565b50565b3480156101eb57600080fd5b506101bf6101fa3660046109d6565b610570565b34801561020b57600080fd5b50600154610102906001600160a01b031681565b34801561022b57600080fd5b50600754610102906001600160a01b031681565b34801561024b57600080fd5b50600354610102906001600160a01b031681565b34801561026b57600080fd5b50600254610102906001600160a01b031681565b34801561028b57600080fd5b50600054610102906001600160a01b031681565b3480156102ab57600080fd5b506101bf6102ba366004610a18565b6106c0565b8051808201602090810180516006825292820191909301209152805460018201546002830180546001600160a01b0393841694929093169261030090610a71565b80601f016020809104026020016040519081016040528092919081815260200182805461032c90610a71565b80156103795780601f1061034e57610100808354040283529160200191610379565b820191906000526020600020905b81548152906001019060200180831161035c57829003601f168201915b5050505050908060030154905084565b6007546000906001600160a01b031633146103eb5760405162461bcd60e51b815260206004820152601760248201527f43616c6c6572206973206e6f7420746865206f776e657200000000000000000060448201526064015b60405180910390fd5b50600780546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091161790556001919050565b604051636eb1769f60e11b815233600482015230602482015281906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610469573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048d9190610aab565b10156104db5760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f75676800000000000000000000000060448201526064016103e2565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018290526001600160a01b038316906323b872dd906064016020604051808303816000875af1158015610547573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056b9190610ac4565b505050565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610aab565b101561062e5760405162461bcd60e51b815260206004820152601460248201527f416c6c6f77616e6365206e6f7420656e6f75676800000000000000000000000060448201526064016103e2565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190610ac4565b50505050565b600480546040517fbb7e70ef0000000000000000000000000000000000000000000000000000000081526001600160a01b038681169382019390935260248101849052600060448201819052929091169063bb7e70ef906064016020604051808303816000875af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610ae6565b90506040518060800160405280826001600160a01b03168152602001856001600160a01b03168152602001848152602001838152506006846040516107a29190610b03565b90815260408051602092819003830190208351815473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039283161783559385015160018301805490951691161790925582015160028201906108039082610b6d565b506060820151816003015590505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261083e57600080fd5b813567ffffffffffffffff8082111561085957610859610817565b604051601f8301601f19908116603f0116810190828211818310171561088157610881610817565b8160405283815286602085880101111561089a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156108cc57600080fd5b813567ffffffffffffffff8111156108e357600080fd5b6108ef8482850161082d565b949350505050565b60005b838110156109125781810151838201526020016108fa565b50506000910152565b60006001600160a01b0380871683528086166020840152506080604083015283518060808401526109538160a08501602088016108f7565b606083019390935250601f91909101601f19160160a0019392505050565b6001600160a01b03811681146101dc57600080fd5b60006020828403121561099857600080fd5b81356109a381610971565b9392505050565b600080604083850312156109bd57600080fd5b82356109c881610971565b946020939093013593505050565b6000806000606084860312156109eb57600080fd5b83356109f681610971565b9250602084013591506040840135610a0d81610971565b809150509250925092565b600080600060608486031215610a2d57600080fd5b8335610a3881610971565b9250602084013567ffffffffffffffff811115610a5457600080fd5b610a608682870161082d565b925050604084013590509250925092565b600181811c90821680610a8557607f821691505b602082108103610aa557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610abd57600080fd5b5051919050565b600060208284031215610ad657600080fd5b815180151581146109a357600080fd5b600060208284031215610af857600080fd5b81516109a381610971565b60008251610b158184602087016108f7565b9190910192915050565b601f82111561056b57600081815260208120601f850160051c81016020861015610b465750805b601f850160051c820191505b81811015610b6557828155600101610b52565b505050505050565b815167ffffffffffffffff811115610b8757610b87610817565b610b9b81610b958454610a71565b84610b1f565b602080601f831160018114610bd05760008415610bb85750858301515b600019600386901b1c1916600185901b178555610b65565b600085815260208120601f198616915b82811015610bff57888601518255948401946001909101908401610be0565b5085821015610c1d5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122004a43cab4f14f85acb64fe1a5c342a94bb4a29bbf776b68b3536d4b1b0aa6c7e64736f6c63430008140033";

type YemoVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YemoVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YemoVault__factory extends ContractFactory {
  constructor(...args: YemoVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _dplr: PromiseOrValue<string>,
    _ddsp: PromiseOrValue<string>,
    _eemt: PromiseOrValue<string>,
    appfa: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YemoVault> {
    return super.deploy(
      _owner,
      _dplr,
      _ddsp,
      _eemt,
      appfa,
      overrides || {}
    ) as Promise<YemoVault>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _dplr: PromiseOrValue<string>,
    _ddsp: PromiseOrValue<string>,
    _eemt: PromiseOrValue<string>,
    appfa: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _dplr,
      _ddsp,
      _eemt,
      appfa,
      overrides || {}
    );
  }
  override attach(address: string): YemoVault {
    return super.attach(address) as YemoVault;
  }
  override connect(signer: Signer): YemoVault__factory {
    return super.connect(signer) as YemoVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YemoVaultInterface {
    return new utils.Interface(_abi) as YemoVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YemoVault {
    return new Contract(address, _abi, signerOrProvider) as YemoVault;
  }
}
