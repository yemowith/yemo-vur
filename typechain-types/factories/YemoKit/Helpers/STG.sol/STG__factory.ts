/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  STG,
  STGInterface,
} from "../../../../YemoKit/Helpers/STG.sol/STG";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "dataStore",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "intd",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "storeData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805460ff1916905534801561001a57600080fd5b5060405161058c38038061058c83398101604081905261003991610064565b600080546001600160a01b0390921661010002610100600160a81b0319909216919091179055610094565b60006020828403121561007657600080fd5b81516001600160a01b038116811461008d57600080fd5b9392505050565b6104e9806100a36000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063401ac1cc146100515780638da5cb5b1461007a5780639730174d146100c45780639f36c046146100e7575b600080fd5b61006461005f366004610232565b6100f4565b604051610071919061024b565b60405180910390f35b60005461009f90610100900473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100d76100d23660046102af565b61018e565b6040519015158152602001610071565b6000546100d79060ff1681565b6001602052600090815260409020805461010d9061036a565b80601f01602080910402602001604051908101604052809291908181526020018280546101399061036a565b80156101865780601f1061015b57610100808354040283529160200191610186565b820191906000526020600020905b81548152906001019060200180831161016957829003601f168201915b505050505081565b6000805460ff166101ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4e6f7420696e6974656400000000000000000000000000000000000000000000604482015260640160405180910390fd5b6102098383610213565b5060019392505050565b600082815260016020526040812061022b83826103f3565b5092915050565b60006020828403121561024457600080fd5b5035919050565b600060208083528351808285015260005b818110156102785785810183015185820160400152820161025c565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156102c257600080fd5b82359150602083013567ffffffffffffffff808211156102e157600080fd5b818501915085601f8301126102f557600080fd5b81358181111561030757610307610299565b604051601f8201601f19908116603f0116810190838211818310171561032f5761032f610299565b8160405282815288602084870101111561034857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c9082168061037e57607f821691505b60208210810361039e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103ee57600081815260208120601f850160051c810160208610156103cb5750805b601f850160051c820191505b818110156103ea578281556001016103d7565b5050505b505050565b815167ffffffffffffffff81111561040d5761040d610299565b6104218161041b845461036a565b846103a4565b602080601f831160018114610456576000841561043e5750858301515b600019600386901b1c1916600185901b1785556103ea565b600085815260208120601f198616915b8281101561048557888601518255948401946001909101908401610466565b50858210156104a35787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea264697066735822122090aa254c84ab85b47bb8ddcda617e2a0affcbd83e2a4d88e5fdb155bc1764d9c64736f6c63430008140033";

type STGConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: STGConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class STG__factory extends ContractFactory {
  constructor(...args: STGConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<STG> {
    return super.deploy(_owner, overrides || {}) as Promise<STG>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): STG {
    return super.attach(address) as STG;
  }
  override connect(signer: Signer): STG__factory {
    return super.connect(signer) as STG__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): STGInterface {
    return new utils.Interface(_abi) as STGInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): STG {
    return new Contract(address, _abi, signerOrProvider) as STG;
  }
}
