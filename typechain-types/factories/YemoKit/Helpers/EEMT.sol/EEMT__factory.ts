/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  EEMT,
  EEMTInterface,
} from "../../../../YemoKit/Helpers/EEMT.sol/EEMT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "EventLog",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "addAllowedSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedSenders",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "emitEvent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "sub",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "receiveEventRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "removeAllowedSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051e38038061051e83398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61048b806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cbf6b6fe1161005b578063cbf6b6fe1461012d578063f38b7e0414610155578063f851a44014610168578063fadbcf481461019357600080fd5b8063471eab5c146100825780638f283970146100b3578063c746c8f4146100fb575b600080fd5b6100b1610090366004610291565b6001600160a01b03166000908152602081905260409020805460ff19169055565b005b6100b16100c1366004610291565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6100b1610109366004610291565b6001600160a01b03166000908152602081905260409020805460ff19166001179055565b61014061013b366004610376565b6101b6565b60405190151581526020015b60405180910390f35b610140610163366004610376565b610203565b60015461017b906001600160a01b031681565b6040516001600160a01b03909116815260200161014c565b6101406101a1366004610291565b60006020819052908152604090205460ff1681565b604051600090429033907f689f31f83a7057622aa12f7a5dedc955f8286fc84b4fa19f18f2c2ffdeaebbf1906101f190879085908890610420565b60405180910390a25060019392505050565b3360009081526020819052604081205460ff16610280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f53656e646572206e6f7420616c6c6f7765640000000000000000000000000000604482015260640160405180910390fd5b61028a83836101b6565b9392505050565b6000602082840312156102a357600080fd5b81356001600160a01b038116811461028a57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126102fa57600080fd5b813567ffffffffffffffff80821115610315576103156102ba565b604051601f8301601f19908116603f0116810190828211818310171561033d5761033d6102ba565b8160405283815286602085880101111561035657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561038957600080fd5b823567ffffffffffffffff808211156103a157600080fd5b6103ad868387016102e9565b935060208501359150808211156103c357600080fd5b506103d0858286016102e9565b9150509250929050565b6000815180845260005b81811015610400576020818501810151868301820152016103e4565b506000602082860101526020601f19601f83011685010191505092915050565b60608152600061043360608301866103da565b846020840152828103604084015261044b81856103da565b969550505050505056fea264697066735822122046bea8f146ed1f6145947cf29ca545c7a491820c74837b634fc164b3e0dedf8f64736f6c63430008140033";

type EEMTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EEMTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EEMT__factory extends ContractFactory {
  constructor(...args: EEMTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EEMT> {
    return super.deploy(_admin, overrides || {}) as Promise<EEMT>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): EEMT {
    return super.attach(address) as EEMT;
  }
  override connect(signer: Signer): EEMT__factory {
    return super.connect(signer) as EEMT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EEMTInterface {
    return new utils.Interface(_abi) as EEMTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): EEMT {
    return new Contract(address, _abi, signerOrProvider) as EEMT;
  }
}
