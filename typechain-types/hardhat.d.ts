/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IEventEmitter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEventEmitter__factory>;
    getContractFactory(
      name: "TestEventSender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestEventSender__factory>;
    getContractFactory(
      name: "ADRSB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ADRSB__factory>;
    getContractFactory(
      name: "IADRSB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IADRSB__factory>;
    getContractFactory(
      name: "DDSP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DDSP__factory>;
    getContractFactory(
      name: "DDSPCache",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DDSPCache__factory>;
    getContractFactory(
      name: "DDSPF",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DDSPF__factory>;
    getContractFactory(
      name: "DSAuth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuth__factory>;
    getContractFactory(
      name: "DSAuthEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthEvents__factory>;
    getContractFactory(
      name: "DSAuthority",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSAuthority__factory>;
    getContractFactory(
      name: "DSNote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSNote__factory>;
    getContractFactory(
      name: "IDDSP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDDSP__factory>;
    getContractFactory(
      name: "DPLR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DPLR__factory>;
    getContractFactory(
      name: "FA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FA__factory>;
    getContractFactory(
      name: "IDPLR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDPLR__factory>;
    getContractFactory(
      name: "IFA",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFA__factory>;
    getContractFactory(
      name: "EEMT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EEMT__factory>;
    getContractFactory(
      name: "IEEMT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEEMT__factory>;
    getContractFactory(
      name: "Onl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Onl__factory>;
    getContractFactory(
      name: "Onlntd",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Onlntd__factory>;
    getContractFactory(
      name: "OnlOwnr",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlOwnr__factory>;
    getContractFactory(
      name: "IPY",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPY__factory>;
    getContractFactory(
      name: "PY",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PY__factory>;
    getContractFactory(
      name: "ISTG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISTG__factory>;
    getContractFactory(
      name: "STG",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.STG__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "Vat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vat__factory>;
    getContractFactory(
      name: "IYemoKit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYemoKit__factory>;
    getContractFactory(
      name: "YemoKit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YemoKit__factory>;

    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IEventEmitter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEventEmitter>;
    getContractAt(
      name: "TestEventSender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestEventSender>;
    getContractAt(
      name: "ADRSB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ADRSB>;
    getContractAt(
      name: "IADRSB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IADRSB>;
    getContractAt(
      name: "DDSP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DDSP>;
    getContractAt(
      name: "DDSPCache",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DDSPCache>;
    getContractAt(
      name: "DDSPF",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DDSPF>;
    getContractAt(
      name: "DSAuth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuth>;
    getContractAt(
      name: "DSAuthEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthEvents>;
    getContractAt(
      name: "DSAuthority",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSAuthority>;
    getContractAt(
      name: "DSNote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSNote>;
    getContractAt(
      name: "IDDSP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDDSP>;
    getContractAt(
      name: "DPLR",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DPLR>;
    getContractAt(
      name: "FA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FA>;
    getContractAt(
      name: "IDPLR",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDPLR>;
    getContractAt(
      name: "IFA",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFA>;
    getContractAt(
      name: "EEMT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EEMT>;
    getContractAt(
      name: "IEEMT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEEMT>;
    getContractAt(
      name: "Onl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Onl>;
    getContractAt(
      name: "Onlntd",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Onlntd>;
    getContractAt(
      name: "OnlOwnr",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlOwnr>;
    getContractAt(
      name: "IPY",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPY>;
    getContractAt(
      name: "PY",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PY>;
    getContractAt(
      name: "ISTG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISTG>;
    getContractAt(
      name: "STG",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.STG>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "Vat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vat>;
    getContractAt(
      name: "IYemoKit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IYemoKit>;
    getContractAt(
      name: "YemoKit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YemoKit>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
